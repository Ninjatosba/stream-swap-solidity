{
  "address": "0xCC6eb92791cB49CA0fd0aD587B65C8169c023761",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protocolAdmin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BootstrappingDurationTooShort",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContractFrozen",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "IncorrectNativeAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAcceptedInSupplyTokens",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidBootstrappingStartTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidBootstrappingTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidCreator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidExitFeeRatio",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidFeeCollector",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidImplementationAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidOutSupplyToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPoolWrapper",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidProtocolAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidStreamCreationFeeToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidStreamEndTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidStreamImplementationAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidStreamStartTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidToSVersion",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidVestingDuration",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeTokenTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SameInputAndOutputToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StreamAddressPredictionFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StreamDurationTooShort",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StreamEndMustBeAfterStart",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StreamInputTokenNotAccepted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StreamStartMustBeAfterBootstrapping",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WaitingDurationTooShort",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroOutSupplyNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokensAdded",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokensRemoved",
          "type": "address[]"
        }
      ],
      "name": "AcceptedTokensUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "streamAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "inBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "spentIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exitTimestamp",
          "type": "uint256"
        }
      ],
      "name": "ExitRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "streamAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "purchased",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "spentIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "inBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exitTimestamp",
          "type": "uint256"
        }
      ],
      "name": "ExitStreamed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "streamImplementationAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "poolWrapperAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeCollector",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "protocolAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "streamCreationFeeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "acceptedInSupplyTokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "streamCreationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exitFeeRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minWaitingDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minBootstrappingDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minStreamDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "tosVersion",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vestingAddress",
          "type": "address"
        }
      ],
      "name": "FactoryInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newFeeCollector",
          "type": "address"
        }
      ],
      "name": "FeeCollectorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "streamAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refundedOutAmount",
          "type": "uint256"
        }
      ],
      "name": "FinalizedRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "streamAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creatorRevenue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exitFeeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refundedOutAmount",
          "type": "uint256"
        }
      ],
      "name": "FinalizedStreamed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "frozen",
          "type": "bool"
        }
      ],
      "name": "FrozenStateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "streamCreationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exitFeeRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minWaitingDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minBootstrappingDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minStreamDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "tosVersion",
          "type": "string"
        }
      ],
      "name": "ParamsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factoryAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "poolWrapper",
          "type": "address"
        }
      ],
      "name": "PoolWrapperUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "streamAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionInBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionShares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionLastUpdateTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionSpentIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionPurchased",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionIndex",
          "type": "uint256"
        }
      ],
      "name": "PositionSynced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newProtocolAdmin",
          "type": "address"
        }
      ],
      "name": "ProtocolAdminUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "streamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "outSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "StreamCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "streamFactoryAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "streamOutToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "streamInToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "streamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "positionStorageAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "streamOutAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bootstrappingStartTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "streamStartTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "streamEndTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataIpfsHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "tosVersion",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "streamId",
          "type": "uint16"
        }
      ],
      "name": "StreamCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "streamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataIpfsHash",
          "type": "string"
        }
      ],
      "name": "StreamMetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "streamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastUpdated",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "distIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "outRemaining",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "inSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "spentIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currentStreamedPrice",
          "type": "uint256"
        }
      ],
      "name": "StreamStateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "streamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastUpdated",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "newStatus",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "distIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "outRemaining",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "inSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "spentIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currentStreamedPrice",
          "type": "uint256"
        }
      ],
      "name": "StreamSynced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "streamAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionInBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionShares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionLastUpdateTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionSpentIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionPurchased",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "streamInSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "streamShares",
          "type": "uint256"
        }
      ],
      "name": "Subscribed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factoryAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vestingContract",
          "type": "address"
        }
      ],
      "name": "VestingContractDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "streamAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionInBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionShares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionLastUpdateTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionSpentIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionPurchased",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "positionIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "streamInSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "streamShares",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "acceptedInSupplyTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inSupplyToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "outSupplyToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "streamOutAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bootstrappingStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "streamStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "streamEndTime",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "ipfsHash",
                  "type": "string"
                }
              ],
              "internalType": "struct StreamTypes.StreamMetadata",
              "name": "metadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isVestingEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint64",
                  "name": "vestingDuration",
                  "type": "uint64"
                }
              ],
              "internalType": "struct StreamTypes.VestingInfo",
              "name": "creatorVesting",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isVestingEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint64",
                  "name": "vestingDuration",
                  "type": "uint64"
                }
              ],
              "internalType": "struct StreamTypes.VestingInfo",
              "name": "beneficiaryVesting",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "poolOutSupplyAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StreamTypes.PoolInfo",
              "name": "poolInfo",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "tosVersion",
              "type": "string"
            }
          ],
          "internalType": "struct StreamTypes.CreateStreamMessage",
          "name": "createStreamMessage",
          "type": "tuple"
        }
      ],
      "name": "createStream",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentStreamId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAcceptedInSupplyTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "streamCreationFee",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "streamCreationFeeToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Decimal",
              "name": "exitFeeRatio",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "minWaitingDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minBootstrappingDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minStreamDuration",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "feeCollector",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "protocolAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "tosVersion",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "vestingFactoryAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "poolWrapperAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "streamImplementationAddress",
              "type": "address"
            }
          ],
          "internalType": "struct StreamFactoryTypes.Params",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "streamId",
          "type": "uint16"
        }
      ],
      "name": "getStream",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStreams",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "streamCreationFee",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "streamCreationFeeToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Decimal",
              "name": "exitFeeRatio",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "minWaitingDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minBootstrappingDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minStreamDuration",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "feeCollector",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "protocolAdmin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "tosVersion",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "poolWrapperAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "streamImplementationAddress",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "acceptedInSupplyTokens",
              "type": "address[]"
            }
          ],
          "internalType": "struct StreamFactoryTypes.InitializeStreamMessage",
          "name": "initializeStreamMessage",
          "type": "tuple"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isAcceptedInSupplyToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "streamAddress",
          "type": "address"
        }
      ],
      "name": "isStream",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "params",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "streamCreationFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "streamCreationFeeToken",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct Decimal",
          "name": "exitFeeRatio",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "minWaitingDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minBootstrappingDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minStreamDuration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeCollector",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "protocolAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "tosVersion",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "vestingFactoryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "poolWrapperAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "streamImplementationAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isFrozen",
          "type": "bool"
        }
      ],
      "name": "setFrozen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "streamAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokensToAdd",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "tokensToRemove",
          "type": "address[]"
        }
      ],
      "name": "updateAcceptedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct Decimal",
          "name": "exitFeeRatio",
          "type": "tuple"
        }
      ],
      "name": "updateExitFeeRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeCollector",
          "type": "address"
        }
      ],
      "name": "updateFeeCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minBootstrappingDuration",
          "type": "uint256"
        }
      ],
      "name": "updateMinBootstrappingDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minStreamDuration",
          "type": "uint256"
        }
      ],
      "name": "updateMinStreamDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minWaitingDuration",
          "type": "uint256"
        }
      ],
      "name": "updateMinWaitingDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolWrapper",
          "type": "address"
        }
      ],
      "name": "updatePoolWrapper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protocolAdmin",
          "type": "address"
        }
      ],
      "name": "updateProtocolAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "streamCreationFee",
          "type": "uint256"
        }
      ],
      "name": "updateStreamCreationFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "streamCreationFeeToken",
          "type": "address"
        }
      ],
      "name": "updateStreamCreationFeeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "updateStreamImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tosVersion",
          "type": "string"
        }
      ],
      "name": "updateTosVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9e61250c67fba77b53f01c77db53594dcd7071ebc66025f2837802cc76424595",
  "receipt": {
    "to": null,
    "from": "0xB4eE189569597EFDB3bB48DB5ede8394d1D48e7b",
    "contractAddress": "0xCC6eb92791cB49CA0fd0aD587B65C8169c023761",
    "transactionIndex": 7,
    "gasUsed": "3456414",
    "logsBloom": "0x
    "blockHash": "0x97052bc74d0258069e9850c99b36d3d1818353cc9a3ff29e7fb7f7f1066e60c7",
    "transactionHash": "0x9e61250c67fba77b53f01c77db53594dcd7071ebc66025f2837802cc76424595",
    "logs": [],
    "blockNumber": 37517314,
    "cumulativeGasUsed": "4417678",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB4eE189569597EFDB3bB48DB5ede8394d1D48e7b"
  ],
  "numDeployments": 1,
  "solcInputHash": "c9c117da4fe608ca83f0199fbb0da0f8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protocolAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BootstrappingDurationTooShort\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractFrozen\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"IncorrectNativeAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAcceptedInSupplyTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBootstrappingStartTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBootstrappingTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCreator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExitFeeRatio\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeCollector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImplementationAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOutSupplyToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPoolWrapper\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProtocolAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStreamCreationFeeToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStreamEndTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStreamImplementationAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStreamStartTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToSVersion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVestingDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameInputAndOutputToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StreamAddressPredictionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StreamDurationTooShort\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StreamEndMustBeAfterStart\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StreamInputTokenNotAccepted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StreamStartMustBeAfterBootstrapping\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WaitingDurationTooShort\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroOutSupplyNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokensAdded\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokensRemoved\",\"type\":\"address[]\"}],\"name\":\"AcceptedTokensUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"spentIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exitTimestamp\",\"type\":\"uint256\"}],\"name\":\"ExitRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"purchased\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"spentIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exitTimestamp\",\"type\":\"uint256\"}],\"name\":\"ExitStreamed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"streamImplementationAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"poolWrapperAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"protocolAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"streamCreationFeeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"acceptedInSupplyTokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamCreationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exitFeeRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minWaitingDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minBootstrappingDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minStreamDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tosVersion\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vestingAddress\",\"type\":\"address\"}],\"name\":\"FactoryInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newFeeCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundedOutAmount\",\"type\":\"uint256\"}],\"name\":\"FinalizedRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creatorRevenue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exitFeeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundedOutAmount\",\"type\":\"uint256\"}],\"name\":\"FinalizedStreamed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamCreationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exitFeeRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minWaitingDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minBootstrappingDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minStreamDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tosVersion\",\"type\":\"string\"}],\"name\":\"ParamsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"poolWrapper\",\"type\":\"address\"}],\"name\":\"PoolWrapperUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionInBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionLastUpdateTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionSpentIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionPurchased\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionIndex\",\"type\":\"uint256\"}],\"name\":\"PositionSynced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newProtocolAdmin\",\"type\":\"address\"}],\"name\":\"ProtocolAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"StreamCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"streamFactoryAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"streamOutToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"streamInToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"positionStorageAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamOutAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bootstrappingStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamEndTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataIpfsHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tosVersion\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"streamId\",\"type\":\"uint16\"}],\"name\":\"StreamCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataIpfsHash\",\"type\":\"string\"}],\"name\":\"StreamMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"distIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outRemaining\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"spentIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentStreamedPrice\",\"type\":\"uint256\"}],\"name\":\"StreamStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"distIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outRemaining\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"spentIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentStreamedPrice\",\"type\":\"uint256\"}],\"name\":\"StreamSynced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionInBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionLastUpdateTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionSpentIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionPurchased\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamInSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamShares\",\"type\":\"uint256\"}],\"name\":\"Subscribed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vestingContract\",\"type\":\"address\"}],\"name\":\"VestingContractDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionInBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionLastUpdateTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionSpentIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionPurchased\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamInSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamShares\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"acceptedInSupplyTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inSupplyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outSupplyToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"streamOutAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bootstrappingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"streamStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"streamEndTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"internalType\":\"struct StreamTypes.StreamMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isVestingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"vestingDuration\",\"type\":\"uint64\"}],\"internalType\":\"struct StreamTypes.VestingInfo\",\"name\":\"creatorVesting\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isVestingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"vestingDuration\",\"type\":\"uint64\"}],\"internalType\":\"struct StreamTypes.VestingInfo\",\"name\":\"beneficiaryVesting\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"poolOutSupplyAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct StreamTypes.PoolInfo\",\"name\":\"poolInfo\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"tosVersion\",\"type\":\"string\"}],\"internalType\":\"struct StreamTypes.CreateStreamMessage\",\"name\":\"createStreamMessage\",\"type\":\"tuple\"}],\"name\":\"createStream\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentStreamId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAcceptedInSupplyTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"streamCreationFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"streamCreationFeeToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Decimal\",\"name\":\"exitFeeRatio\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"minWaitingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBootstrappingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minStreamDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tosVersion\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"vestingFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolWrapperAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"streamImplementationAddress\",\"type\":\"address\"}],\"internalType\":\"struct StreamFactoryTypes.Params\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"streamId\",\"type\":\"uint16\"}],\"name\":\"getStream\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStreams\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"streamCreationFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"streamCreationFeeToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Decimal\",\"name\":\"exitFeeRatio\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"minWaitingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBootstrappingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minStreamDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tosVersion\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"poolWrapperAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"streamImplementationAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"acceptedInSupplyTokens\",\"type\":\"address[]\"}],\"internalType\":\"struct StreamFactoryTypes.InitializeStreamMessage\",\"name\":\"initializeStreamMessage\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isAcceptedInSupplyToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"}],\"name\":\"isStream\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"params\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamCreationFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"streamCreationFeeToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Decimal\",\"name\":\"exitFeeRatio\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"minWaitingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBootstrappingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minStreamDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tosVersion\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"vestingFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolWrapperAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"streamImplementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isFrozen\",\"type\":\"bool\"}],\"name\":\"setFrozen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"streamAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokensToAdd\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensToRemove\",\"type\":\"address[]\"}],\"name\":\"updateAcceptedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Decimal\",\"name\":\"exitFeeRatio\",\"type\":\"tuple\"}],\"name\":\"updateExitFeeRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"name\":\"updateFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minBootstrappingDuration\",\"type\":\"uint256\"}],\"name\":\"updateMinBootstrappingDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minStreamDuration\",\"type\":\"uint256\"}],\"name\":\"updateMinStreamDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minWaitingDuration\",\"type\":\"uint256\"}],\"name\":\"updateMinWaitingDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolWrapper\",\"type\":\"address\"}],\"name\":\"updatePoolWrapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protocolAdmin\",\"type\":\"address\"}],\"name\":\"updateProtocolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamCreationFee\",\"type\":\"uint256\"}],\"name\":\"updateStreamCreationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"streamCreationFeeToken\",\"type\":\"address\"}],\"name\":\"updateStreamCreationFeeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"updateStreamImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tosVersion\",\"type\":\"string\"}],\"name\":\"updateTosVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory contract for creating and managing token streams\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to set the protocol admin\",\"params\":{\"protocolAdmin\":\"Address of the protocol admin\"}},\"createStream((address,address,address,uint256,uint256,uint256,uint256,uint256,(string),(bool,uint64),(bool,uint64),(uint256),string))\":{\"details\":\"Creates a new stream with the provided configuration\",\"params\":{\"createStreamMessage\":\"Stream creation parameters\"}},\"getAcceptedInSupplyTokens()\":{\"details\":\"Get all accepted input supply tokens\",\"returns\":{\"_0\":\"Array of accepted token addresses\"}},\"getParams()\":{\"details\":\"Get factory parameters\",\"returns\":{\"_0\":\"Factory parameters\"}},\"getStream(uint16)\":{\"details\":\"Get stream address by ID\",\"params\":{\"streamId\":\"Stream ID\"},\"returns\":{\"_0\":\"Stream address\"}},\"getStreams()\":{\"details\":\"Get all stream addresses\",\"returns\":{\"_0\":\"Array of stream addresses\"}},\"initialize((uint256,address,(uint256),uint256,uint256,uint256,address,address,string,address,address,address[]))\":{\"details\":\"Initializes the factory with the provided configuration\",\"params\":{\"initializeStreamMessage\":\"Factory initialization parameters\"}},\"isAcceptedInSupplyToken(address)\":{\"details\":\"Check if a token is accepted as input supply token\",\"params\":{\"token\":\"Token address to check\"},\"returns\":{\"_0\":\"True if the token is accepted\"}},\"isStream(address)\":{\"details\":\"Check if an address is a stream created by this factory\",\"params\":{\"streamAddress\":\"Address to check\"},\"returns\":{\"_0\":\"True if the address is a stream\"}},\"setFrozen(bool)\":{\"details\":\"Sets the frozen state of the factory\",\"params\":{\"isFrozen\":\"Whether the factory should be frozen\"}},\"updateAcceptedTokens(address[],address[])\":{\"details\":\"Updates the list of accepted input supply tokens\",\"params\":{\"tokensToAdd\":\"Array of token addresses to add\",\"tokensToRemove\":\"Array of token addresses to remove\"}},\"updateExitFeeRatio((uint256))\":{\"details\":\"Updates the exit fee ratio\",\"params\":{\"exitFeeRatio\":\"New exit fee ratio\"}},\"updateFeeCollector(address)\":{\"details\":\"Updates the fee collector address\",\"params\":{\"feeCollector\":\"New fee collector address\"}},\"updateMinBootstrappingDuration(uint256)\":{\"details\":\"Updates the minimum bootstrapping duration\",\"params\":{\"minBootstrappingDuration\":\"New minimum bootstrapping duration\"}},\"updateMinStreamDuration(uint256)\":{\"details\":\"Updates the minimum stream duration\",\"params\":{\"minStreamDuration\":\"New minimum stream duration\"}},\"updateMinWaitingDuration(uint256)\":{\"details\":\"Updates the minimum waiting duration\",\"params\":{\"minWaitingDuration\":\"New minimum waiting duration\"}},\"updatePoolWrapper(address)\":{\"details\":\"Updates the pool wrapper address\",\"params\":{\"poolWrapper\":\"New pool wrapper address\"}},\"updateProtocolAdmin(address)\":{\"details\":\"Updates the protocol admin address\",\"params\":{\"protocolAdmin\":\"New protocol admin address\"}},\"updateStreamCreationFee(uint256)\":{\"details\":\"Updates the stream creation fee\",\"params\":{\"streamCreationFee\":\"New creation fee amount\"}},\"updateStreamCreationFeeToken(address)\":{\"details\":\"Updates the stream creation fee token\",\"params\":{\"streamCreationFeeToken\":\"New fee token address\"}},\"updateStreamImplementation(address)\":{\"details\":\"Updates the stream implementation address\",\"params\":{\"implementation\":\"New stream implementation address\"}},\"updateTosVersion(string)\":{\"details\":\"Updates the TOS version\",\"params\":{\"tosVersion\":\"New TOS version\"}}},\"title\":\"StreamFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptedInSupplyTokens(address)\":{\"notice\":\"Mapping of accepted input supply tokens\"},\"createStream((address,address,address,uint256,uint256,uint256,uint256,uint256,(string),(bool,uint64),(bool,uint64),(uint256),string))\":{\"notice\":\"Anyone can create a stream if they provide the required tokens and fees\"},\"currentStreamId()\":{\"notice\":\"Current stream ID counter\"},\"frozen()\":{\"notice\":\"Flag to freeze stream creation\"},\"initialize((uint256,address,(uint256),uint256,uint256,uint256,address,address,string,address,address,address[]))\":{\"notice\":\"This function can only be called once by the admin\"},\"initialized()\":{\"notice\":\"Flag to ensure initialization happens only once\"},\"params()\":{\"notice\":\"Factory parameters\"},\"streamAddresses(uint16)\":{\"notice\":\"Mapping of stream ID to stream address\"}},\"notice\":\"Handles stream creation, parameter management, and accepted token management\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/StreamFactory.sol\":\"StreamFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/finance/VestingWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (finance/VestingWallet.sol)\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @title VestingWallet\\n * @dev This contract handles the vesting of Eth and ERC20 tokens for a given beneficiary. Custody of multiple tokens\\n * can be given to this contract, which will release the token to the beneficiary following a given vesting schedule.\\n * The vesting schedule is customizable through the {vestedAmount} function.\\n *\\n * Any token transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\\n * Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\\n * be immediately releasable.\\n */\\ncontract VestingWallet is Context {\\n    event EtherReleased(uint256 amount);\\n    event ERC20Released(address indexed token, uint256 amount);\\n\\n    uint256 private _released;\\n    mapping(address => uint256) private _erc20Released;\\n    address private immutable _beneficiary;\\n    uint64 private immutable _start;\\n    uint64 private immutable _duration;\\n\\n    /**\\n     * @dev Set the beneficiary, start timestamp and vesting duration of the vesting wallet.\\n     */\\n    constructor(address beneficiaryAddress, uint64 startTimestamp, uint64 durationSeconds) payable {\\n        require(beneficiaryAddress != address(0), \\\"VestingWallet: beneficiary is zero address\\\");\\n        _beneficiary = beneficiaryAddress;\\n        _start = startTimestamp;\\n        _duration = durationSeconds;\\n    }\\n\\n    /**\\n     * @dev The contract should be able to receive Eth.\\n     */\\n    receive() external payable virtual {}\\n\\n    /**\\n     * @dev Getter for the beneficiary address.\\n     */\\n    function beneficiary() public view virtual returns (address) {\\n        return _beneficiary;\\n    }\\n\\n    /**\\n     * @dev Getter for the start timestamp.\\n     */\\n    function start() public view virtual returns (uint256) {\\n        return _start;\\n    }\\n\\n    /**\\n     * @dev Getter for the vesting duration.\\n     */\\n    function duration() public view virtual returns (uint256) {\\n        return _duration;\\n    }\\n\\n    /**\\n     * @dev Amount of eth already released\\n     */\\n    function released() public view virtual returns (uint256) {\\n        return _released;\\n    }\\n\\n    /**\\n     * @dev Amount of token already released\\n     */\\n    function released(address token) public view virtual returns (uint256) {\\n        return _erc20Released[token];\\n    }\\n\\n    /**\\n     * @dev Getter for the amount of releasable eth.\\n     */\\n    function releasable() public view virtual returns (uint256) {\\n        return vestedAmount(uint64(block.timestamp)) - released();\\n    }\\n\\n    /**\\n     * @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\\n     * IERC20 contract.\\n     */\\n    function releasable(address token) public view virtual returns (uint256) {\\n        return vestedAmount(token, uint64(block.timestamp)) - released(token);\\n    }\\n\\n    /**\\n     * @dev Release the native token (ether) that have already vested.\\n     *\\n     * Emits a {EtherReleased} event.\\n     */\\n    function release() public virtual {\\n        uint256 amount = releasable();\\n        _released += amount;\\n        emit EtherReleased(amount);\\n        Address.sendValue(payable(beneficiary()), amount);\\n    }\\n\\n    /**\\n     * @dev Release the tokens that have already vested.\\n     *\\n     * Emits a {ERC20Released} event.\\n     */\\n    function release(address token) public virtual {\\n        uint256 amount = releasable(token);\\n        _erc20Released[token] += amount;\\n        emit ERC20Released(token, amount);\\n        SafeERC20.safeTransfer(IERC20(token), beneficiary(), amount);\\n    }\\n\\n    /**\\n     * @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\\n     */\\n    function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {\\n        return _vestingSchedule(address(this).balance + released(), timestamp);\\n    }\\n\\n    /**\\n     * @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\\n     */\\n    function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {\\n        return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp);\\n    }\\n\\n    /**\\n     * @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\\n     * an asset given its total historical allocation.\\n     */\\n    function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {\\n        if (timestamp < start()) {\\n            return 0;\\n        } else if (timestamp > start() + duration()) {\\n            return totalAllocation;\\n        } else {\\n            return (totalAllocation * (timestamp - start())) / duration();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3bc68a5aeb7b6ac30ebc323b0ab9965ae8b71fee660d4a2aaf5c6ee87afbedc9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create(0, 0x09, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create2(0, 0x09, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(add(ptr, 0x38), deployer)\\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\\n            mstore(add(ptr, 0x14), implementation)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\\n            mstore(add(ptr, 0x58), salt)\\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\\n            predicted := keccak256(add(ptr, 0x43), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt\\n    ) internal view returns (address predicted) {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"src/StreamFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/**\\n * @title StreamFactory\\n * @author Adnan Deniz Corlu (@Ninjatosba)\\n * @notice Central factory managing StreamSwap protocol operations and stream creation\\n * @dev The StreamFactory serves as the protocol's control center, handling stream creation,\\n *      parameter management, and protocol governance. It uses minimal proxy clones for\\n *      gas-efficient stream deployment and maintains protocol-wide configurations.\\n *      \\n *      Core Responsibilities:\\n *      - Stream Creation: Deploy new streams with validation and fee collection\\n *      - Protocol Parameters: Manage fees, durations, and accepted tokens\\n *      - Access Control: Admin functions for protocol governance\\n *      - Emergency Powers: Freeze stream creation and cancel active streams\\n *      - Integration Management: Deploy and coordinate with VestingFactory\\n */\\nimport { IStreamEvents } from \\\"./interfaces/IStreamEvents.sol\\\";\\nimport { IStreamFactoryErrors } from \\\"./interfaces/IStreamFactoryErrors.sol\\\";\\nimport { VestingFactory } from \\\"./VestingFactory.sol\\\";\\nimport { StreamTypes } from \\\"./types/StreamTypes.sol\\\";\\nimport { IStream } from \\\"./interfaces/IStream.sol\\\";\\nimport { StreamFactoryTypes } from \\\"./types/StreamFactoryTypes.sol\\\";\\nimport { Clones } from \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { TransferLib } from \\\"./lib/TransferLib.sol\\\";\\nimport { PositionStorage } from \\\"./storage/PositionStorage.sol\\\";\\nimport { DecimalMath, Decimal } from \\\"./lib/math/DecimalMath.sol\\\";\\n\\n/**\\n * @title StreamFactory\\n * @dev Factory contract for creating and managing token streams\\n * @notice Handles stream creation, parameter management, and accepted token management\\n */\\ncontract StreamFactory is IStreamEvents, IStreamFactoryErrors {\\n    using TransferLib for address;\\n\\n    // ============ State Variables ============\\n\\n    /// @notice Mapping of accepted input supply tokens\\n    mapping(address => bool) public acceptedInSupplyTokens;\\n\\n    /// @notice Current stream ID counter\\n    uint16 public currentStreamId;\\n\\n    /// @notice Factory parameters\\n    StreamFactoryTypes.Params public params;\\n\\n    /// @notice Mapping of stream ID to stream address\\n    mapping(uint16 => address) public streamAddresses;\\n\\n    /// @notice Flag to freeze stream creation\\n    bool public frozen;\\n\\n    /// @notice Flag to ensure initialization happens only once\\n    bool public initialized;\\n\\n    // ============ Modifiers ============\\n\\n    /**\\n     * @dev Ensures the function can only be called once during initialization\\n     */\\n    modifier onlyOnce() {\\n        if (initialized) revert AlreadyInitialized();\\n        _;\\n        initialized = true;\\n    }\\n\\n    /**\\n     * @dev Ensures only the protocol admin can call the function\\n     */\\n    modifier onlyAdmin() {\\n        if (msg.sender != params.protocolAdmin) revert NotAdmin();\\n        _;\\n    }\\n\\n    // ============ Constructor ============\\n\\n    /**\\n     * @dev Constructor to set the protocol admin\\n     * @param protocolAdmin Address of the protocol admin\\n     */\\n    constructor(address protocolAdmin) {\\n        if (protocolAdmin == address(0)) revert InvalidProtocolAdmin();\\n        params.protocolAdmin = protocolAdmin;\\n    }\\n\\n    // ============ Initialization ============\\n\\n    /**\\n     * @dev Initializes the factory with the provided configuration\\n     * @param initializeStreamMessage Factory initialization parameters\\n     * @notice This function can only be called once by the admin\\n     */\\n    function initialize(\\n        StreamFactoryTypes.InitializeStreamMessage memory initializeStreamMessage\\n    ) external onlyAdmin onlyOnce {\\n        if (DecimalMath.gt(initializeStreamMessage.exitFeeRatio, DecimalMath.fromNumber(1)))\\n            revert InvalidExitFeeRatio();\\n\\n        if (initializeStreamMessage.acceptedInSupplyTokens.length == 0) revert InvalidAcceptedInSupplyTokens();\\n\\n        // Allow zero address for native token support\\n        // if (initializeStreamMessage.streamCreationFeeToken == address(0)) revert InvalidStreamCreationFeeToken();\\n\\n        if (initializeStreamMessage.streamImplementationAddress == address(0))\\n            revert InvalidStreamImplementationAddress();\\n\\n        if (initializeStreamMessage.poolWrapperAddress == address(0)) revert InvalidPoolWrapper();\\n\\n        // Deploy vesting factory\\n        VestingFactory vestingFactory = new VestingFactory();\\n        emit VestingContractDeployed(address(this), address(vestingFactory));\\n\\n        // Set factory parameters\\n        params.streamCreationFee = initializeStreamMessage.streamCreationFee;\\n        params.streamCreationFeeToken = initializeStreamMessage.streamCreationFeeToken;\\n        params.exitFeeRatio = initializeStreamMessage.exitFeeRatio;\\n        params.minWaitingDuration = initializeStreamMessage.minWaitingDuration;\\n        params.minBootstrappingDuration = initializeStreamMessage.minBootstrappingDuration;\\n        params.minStreamDuration = initializeStreamMessage.minStreamDuration;\\n        params.feeCollector = initializeStreamMessage.feeCollector;\\n        params.tosVersion = initializeStreamMessage.tosVersion;\\n        params.vestingFactoryAddress = address(vestingFactory);\\n        params.poolWrapperAddress = initializeStreamMessage.poolWrapperAddress;\\n        params.streamImplementationAddress = initializeStreamMessage.streamImplementationAddress;\\n\\n        // Set accepted tokens (including zero address for native token)\\n        for (uint256 i = 0; i < initializeStreamMessage.acceptedInSupplyTokens.length; i++) {\\n            // Allow zero address for native token support\\n            // if (initializeStreamMessage.acceptedInSupplyTokens[i] == address(0)) revert InvalidAcceptedInSupplyTokens();\\n            acceptedInSupplyTokens[initializeStreamMessage.acceptedInSupplyTokens[i]] = true;\\n        }\\n\\n        emit FactoryInitialized(\\n            address(this),\\n            initializeStreamMessage.streamImplementationAddress,\\n            initializeStreamMessage.poolWrapperAddress,\\n            initializeStreamMessage.feeCollector,\\n            initializeStreamMessage.protocolAdmin,\\n            initializeStreamMessage.streamCreationFeeToken,\\n            initializeStreamMessage.acceptedInSupplyTokens,\\n            initializeStreamMessage.streamCreationFee,\\n            initializeStreamMessage.exitFeeRatio.value,\\n            initializeStreamMessage.minWaitingDuration,\\n            initializeStreamMessage.minBootstrappingDuration,\\n            initializeStreamMessage.minStreamDuration,\\n            initializeStreamMessage.tosVersion,\\n            address(vestingFactory)\\n        );\\n    }\\n\\n    // ============ Stream Creation ============\\n\\n    /**\\n     * @dev Creates a new stream with the provided configuration\\n     * @param createStreamMessage Stream creation parameters\\n     * @notice Anyone can create a stream if they provide the required tokens and fees\\n     */\\n    function createStream(StreamTypes.CreateStreamMessage memory createStreamMessage) external payable {\\n        // Check if contract is accepting new streams (not frozen)\\n        if (frozen) revert ContractFrozen();\\n\\n        // Validate input parameters\\n        if (createStreamMessage.streamOutAmount == 0) revert ZeroOutSupplyNotAllowed();\\n        if (createStreamMessage.outSupplyToken == address(0)) revert InvalidOutSupplyToken();\\n        if (createStreamMessage.creator == address(0)) revert InvalidCreator();\\n        if (!acceptedInSupplyTokens[createStreamMessage.inSupplyToken]) revert StreamInputTokenNotAccepted();\\n        if (createStreamMessage.inSupplyToken == createStreamMessage.outSupplyToken) revert SameInputAndOutputToken();\\n    \\n\\n        // Validate vesting configurations\\n        validateVesting(createStreamMessage.creatorVesting);\\n        validateVesting(createStreamMessage.beneficiaryVesting);\\n\\n        // Validate time parameters\\n        validateStreamTimes(\\n            block.timestamp,\\n            createStreamMessage.bootstrappingStartTime,\\n            createStreamMessage.streamStartTime,\\n            createStreamMessage.streamEndTime\\n        );\\n\\n        // Validate TOS version\\n        if (\\n            keccak256(abi.encodePacked(createStreamMessage.tosVersion)) !=\\n            keccak256(abi.encodePacked(params.tosVersion))\\n        ) revert InvalidToSVersion();\\n\\n        // Handle creation fee (can be native or ERC20) BEFORE any cloning/deployment\\n        // Pull the fee into the factory. msg.value must be handled by callee via checks.\\n        TransferLib.pullFunds(\\n            params.streamCreationFeeToken,\\n            msg.sender,\\n            params.streamCreationFee\\n        );\\n        TransferLib.pushFunds(\\n            params.streamCreationFeeToken,\\n            params.feeCollector,\\n            params.streamCreationFee\\n        );\\n\\n        // Clone stream contract\\n        address clone = Clones.clone(params.streamImplementationAddress);\\n        IStream stream = IStream(clone);\\n\\n        // Deploy PositionStorage\\n        PositionStorage positionStorage = new PositionStorage(address(stream));\\n\\n        uint16 streamId = currentStreamId;\\n        currentStreamId++;\\n        streamAddresses[streamId] = address(stream);\\n\\n        // Transfer output tokens to stream (output tokens cannot be native)\\n        uint256 totalOut = createStreamMessage.streamOutAmount + createStreamMessage.poolInfo.poolOutSupplyAmount;\\n        TransferLib.pullFunds(createStreamMessage.outSupplyToken, msg.sender, totalOut);\\n        TransferLib.pushFunds(createStreamMessage.outSupplyToken, address(stream), totalOut);\\n\\n        // Initialize the cloned stream\\n        stream.initialize(createStreamMessage, address(positionStorage));\\n\\n        emit StreamCreated(\\n            address(this),\\n            createStreamMessage.outSupplyToken,\\n            createStreamMessage.inSupplyToken,\\n            address(stream),\\n            createStreamMessage.creator,\\n            address(positionStorage),\\n            createStreamMessage.streamOutAmount,\\n            createStreamMessage.bootstrappingStartTime,\\n            createStreamMessage.streamStartTime,\\n            createStreamMessage.streamEndTime,\\n            createStreamMessage.threshold,\\n            createStreamMessage.metadata.ipfsHash,\\n            params.tosVersion,\\n            streamId\\n        );\\n    }\\n\\n    // ============ Parameter Management ============\\n\\n    /**\\n     * @dev Updates the stream creation fee\\n     * @param streamCreationFee New creation fee amount\\n     */\\n    function updateStreamCreationFee(uint256 streamCreationFee) external onlyAdmin {\\n        params.streamCreationFee = streamCreationFee;\\n        emit ParamsUpdated(\\n            address(this),\\n            streamCreationFee,\\n            params.exitFeeRatio.value,\\n            params.minWaitingDuration,\\n            params.minBootstrappingDuration,\\n            params.minStreamDuration,\\n            params.tosVersion\\n        );\\n    }\\n\\n    /**\\n     * @dev Updates the stream creation fee token\\n     * @param streamCreationFeeToken New fee token address\\n     */\\n    function updateStreamCreationFeeToken(address streamCreationFeeToken) external onlyAdmin {\\n        // Allow zero address for native token support\\n        // if (streamCreationFeeToken == address(0)) revert InvalidStreamCreationFeeToken();\\n        params.streamCreationFeeToken = streamCreationFeeToken;\\n        emit ParamsUpdated(\\n            address(this),\\n            params.streamCreationFee,\\n            params.exitFeeRatio.value,\\n            params.minWaitingDuration,\\n            params.minBootstrappingDuration,\\n            params.minStreamDuration,\\n            params.tosVersion\\n        );\\n    }\\n\\n    /**\\n     * @dev Updates the exit fee ratio\\n     * @param exitFeeRatio New exit fee ratio\\n     */\\n    function updateExitFeeRatio(Decimal memory exitFeeRatio) external onlyAdmin {\\n        if (DecimalMath.gt(exitFeeRatio, DecimalMath.fromNumber(1))) revert InvalidExitFeeRatio();\\n        params.exitFeeRatio = exitFeeRatio;\\n        emit ParamsUpdated(\\n            address(this),\\n            params.streamCreationFee,\\n            exitFeeRatio.value,\\n            params.minWaitingDuration,\\n            params.minBootstrappingDuration,\\n            params.minStreamDuration,\\n            params.tosVersion\\n        );\\n    }\\n\\n    /**\\n     * @dev Updates the minimum waiting duration\\n     * @param minWaitingDuration New minimum waiting duration\\n     */\\n    function updateMinWaitingDuration(uint256 minWaitingDuration) external onlyAdmin {\\n        params.minWaitingDuration = minWaitingDuration;\\n        emit ParamsUpdated(\\n            address(this),\\n            params.streamCreationFee,\\n            params.exitFeeRatio.value,\\n            minWaitingDuration,\\n            params.minBootstrappingDuration,\\n            params.minStreamDuration,\\n            params.tosVersion\\n        );\\n    }\\n\\n    /**\\n     * @dev Updates the minimum bootstrapping duration\\n     * @param minBootstrappingDuration New minimum bootstrapping duration\\n     */\\n    function updateMinBootstrappingDuration(uint256 minBootstrappingDuration) external onlyAdmin {\\n        params.minBootstrappingDuration = minBootstrappingDuration;\\n        emit ParamsUpdated(\\n            address(this),\\n            params.streamCreationFee,\\n            params.exitFeeRatio.value,\\n            params.minWaitingDuration,\\n            minBootstrappingDuration,\\n            params.minStreamDuration,\\n            params.tosVersion\\n        );\\n    }\\n\\n    /**\\n     * @dev Updates the minimum stream duration\\n     * @param minStreamDuration New minimum stream duration\\n     */\\n    function updateMinStreamDuration(uint256 minStreamDuration) external onlyAdmin {\\n        params.minStreamDuration = minStreamDuration;\\n        emit ParamsUpdated(\\n            address(this),\\n            params.streamCreationFee,\\n            params.exitFeeRatio.value,\\n            params.minWaitingDuration,\\n            params.minBootstrappingDuration,\\n            minStreamDuration,\\n            params.tosVersion\\n        );\\n    }\\n\\n    /**\\n     * @dev Updates the TOS version\\n     * @param tosVersion New TOS version\\n     */\\n    function updateTosVersion(string memory tosVersion) external onlyAdmin {\\n        params.tosVersion = tosVersion;\\n        emit ParamsUpdated(\\n            address(this),\\n            params.streamCreationFee,\\n            params.exitFeeRatio.value,\\n            params.minWaitingDuration,\\n            params.minBootstrappingDuration,\\n            params.minStreamDuration,\\n            tosVersion\\n        );\\n    }\\n\\n    /**\\n     * @dev Updates the fee collector address\\n     * @param feeCollector New fee collector address\\n     */\\n    function updateFeeCollector(address feeCollector) external onlyAdmin {\\n        if (feeCollector == address(0)) revert InvalidFeeCollector();\\n        params.feeCollector = feeCollector;\\n        emit FeeCollectorUpdated(address(this), feeCollector);\\n    }\\n\\n    /**\\n     * @dev Updates the protocol admin address\\n     * @param protocolAdmin New protocol admin address\\n     */\\n    function updateProtocolAdmin(address protocolAdmin) external onlyAdmin {\\n        if (protocolAdmin == address(0)) revert InvalidProtocolAdmin();\\n        params.protocolAdmin = protocolAdmin;\\n        emit ProtocolAdminUpdated(address(this), protocolAdmin);\\n    }\\n\\n    /**\\n     * @dev Updates the pool wrapper address\\n     * @param poolWrapper New pool wrapper address\\n     */\\n    function updatePoolWrapper(address poolWrapper) external onlyAdmin {\\n        if (poolWrapper == address(0)) revert InvalidPoolWrapper();\\n        params.poolWrapperAddress = poolWrapper;\\n        emit PoolWrapperUpdated(address(this), poolWrapper);\\n    }\\n\\n    /**\\n     * @dev Updates the stream implementation address\\n     * @param implementation New stream implementation address\\n     */\\n    function updateStreamImplementation(address implementation) external onlyAdmin {\\n        if (implementation == address(0)) revert InvalidImplementationAddress();\\n        params.streamImplementationAddress = implementation;\\n        emit ParamsUpdated(\\n            address(this),\\n            params.streamCreationFee,\\n            params.exitFeeRatio.value,\\n            params.minWaitingDuration,\\n            params.minBootstrappingDuration,\\n            params.minStreamDuration,\\n            params.tosVersion\\n        );\\n    }\\n\\n    // ============ Token Management ============\\n\\n    /**\\n     * @dev Updates the list of accepted input supply tokens\\n     * @param tokensToAdd Array of token addresses to add\\n     * @param tokensToRemove Array of token addresses to remove\\n     */\\n    function updateAcceptedTokens(\\n        address[] calldata tokensToAdd,\\n        address[] calldata tokensToRemove\\n    ) external onlyAdmin {\\n        for (uint256 i = 0; i < tokensToAdd.length; i++) {\\n            acceptedInSupplyTokens[tokensToAdd[i]] = true;\\n        }\\n        for (uint256 i = 0; i < tokensToRemove.length; i++) {\\n            acceptedInSupplyTokens[tokensToRemove[i]] = false;\\n        }\\n        emit AcceptedTokensUpdated(address(this), tokensToAdd, tokensToRemove);\\n    }\\n\\n    // ============ Factory Management ============\\n\\n    /**\\n     * @dev Sets the frozen state of the factory\\n     * @param isFrozen Whether the factory should be frozen\\n     */\\n    function setFrozen(bool isFrozen) external onlyAdmin {\\n        frozen = isFrozen;\\n        emit FrozenStateUpdated(address(this), isFrozen);\\n    }\\n\\n    // ============ View Functions ============\\n\\n    /**\\n     * @dev Get all stream addresses\\n     * @return Array of stream addresses\\n     */\\n    function getStreams() external view returns (address[] memory) {\\n        address[] memory streams = new address[](currentStreamId);\\n        for (uint16 i = 0; i < currentStreamId; i++) {\\n            streams[i] = streamAddresses[i];\\n        }\\n        return streams;\\n    }\\n\\n    /**\\n     * @dev Get stream address by ID\\n     * @param streamId Stream ID\\n     * @return Stream address\\n     */\\n    function getStream(uint16 streamId) external view returns (address) {\\n        return streamAddresses[streamId];\\n    }\\n\\n    /**\\n     * @dev Check if an address is a stream created by this factory\\n     * @param streamAddress Address to check\\n     * @return True if the address is a stream\\n     */\\n    function isStream(address streamAddress) external view returns (bool) {\\n        for (uint16 i = 0; i < currentStreamId; i++) {\\n            if (streamAddresses[i] == streamAddress) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * @dev Get factory parameters\\n     * @return Factory parameters\\n     */\\n    function getParams() external view returns (StreamFactoryTypes.Params memory) {\\n        return params;\\n    }\\n\\n    /**\\n     * @dev Check if a token is accepted as input supply token\\n     * @param token Token address to check\\n     * @return True if the token is accepted\\n     */\\n    function isAcceptedInSupplyToken(address token) public view returns (bool) {\\n        return acceptedInSupplyTokens[token];\\n    }\\n\\n    /**\\n     * @dev Get all accepted input supply tokens\\n     * @return Array of accepted token addresses\\n     */\\n    function getAcceptedInSupplyTokens() external view returns (address[] memory) {\\n        address[] memory tokens = new address[](currentStreamId);\\n        for (uint16 i = 0; i < currentStreamId; i++) {\\n            if (acceptedInSupplyTokens[streamAddresses[i]]) {\\n                tokens[i] = streamAddresses[i];\\n            }\\n        }\\n        return tokens;\\n    }\\n\\n    // ============ Internal Functions ============\\n\\n    /**\\n     * @dev Validates stream timing parameters\\n     * @param nowTime Current timestamp\\n     * @param bootstrappingStartTime Bootstrapping start time\\n     * @param startTime Stream start time\\n     * @param endTime Stream end time\\n     */\\n    function validateStreamTimes(\\n        uint256 nowTime,\\n        uint256 bootstrappingStartTime,\\n        uint256 startTime,\\n        uint256 endTime\\n    ) internal view {\\n        if (nowTime > bootstrappingStartTime) revert InvalidBootstrappingStartTime();\\n        if (bootstrappingStartTime > startTime) revert InvalidStreamStartTime();\\n        if (startTime > endTime) revert InvalidStreamEndTime();\\n        if (endTime - startTime < params.minStreamDuration) revert StreamDurationTooShort();\\n        if (startTime - bootstrappingStartTime < params.minBootstrappingDuration)\\n            revert BootstrappingDurationTooShort();\\n        if (bootstrappingStartTime - nowTime < params.minWaitingDuration) revert WaitingDurationTooShort();\\n    }\\n\\n    /**\\n     * @dev Validates vesting configurations\\n     * @param vesting Vesting configuration to validate\\n     */\\n    function validateVesting(StreamTypes.VestingInfo memory vesting) internal pure {\\n        if (vesting.isVestingEnabled && vesting.vestingDuration == 0) {\\n            revert InvalidVestingDuration();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc5993368dbb340b42516613b348c3efb5579c839c9353824cb2f81c5a24da98\",\"license\":\"MIT\"},\"src/VestingFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/**\\n * @title VestingFactory\\n * @author Adnan Deniz Corlu (@Ninjatosba)\\n * @notice Factory for creating OpenZeppelin VestingWallet instances for stream participants\\n * @dev This contract creates vesting wallets for post-stream token distribution:\\n *      - Creates VestingWallet instances using OpenZeppelin's audited implementation\\n *      - Handles token transfers to newly created vesting contracts\\n *      - Used for both creator and beneficiary vesting scenarios\\n *      - Ensures secure and standardized vesting functionality\\n */\\n\\nimport { VestingWallet } from \\\"@openzeppelin/contracts/finance/VestingWallet.sol\\\";\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { SafeERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n/**\\n * @title VestingFactory\\n * @dev Factory contract for creating OpenZeppelin VestingWallet instances\\n */\\ncontract VestingFactory {\\n    using SafeERC20 for IERC20;\\n\\n    // Custom errors\\n    error InvalidBeneficiary();\\n    error InvalidStartTime();\\n    error InvalidDuration();\\n    error InvalidToken();\\n    error InvalidAmount();\\n    error TokenTransferFailed();\\n\\n    event VestingWalletCreated(\\n        address indexed beneficiary,\\n        address indexed vestingWallet,\\n        uint64 startTime,\\n        uint64 duration,\\n        address token,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @dev Creates a VestingWallet and transfers tokens to it in one transaction\\n     * @param beneficiary address of the beneficiary\\n     * @param startTime the time (as Unix time) at which point vesting begins\\n     * @param duration duration in seconds of the period in which the tokens will vest\\n     * @param token the ERC20 token to transfer to the vesting wallet\\n     * @param amount the amount of tokens to transfer\\n     * @return vestingWallet the address of the created VestingWallet\\n     */\\n    function createVestingWalletWithTokens(\\n        address beneficiary,\\n        uint64 startTime,\\n        uint64 duration,\\n        address token,\\n        uint256 amount\\n    ) external returns (address vestingWallet) {\\n        if (beneficiary == address(0)) revert InvalidBeneficiary();\\n        if (startTime == 0) revert InvalidStartTime();\\n        if (startTime < block.timestamp) revert InvalidStartTime();\\n        if (duration == 0) revert InvalidDuration();\\n        if (token == address(0)) revert InvalidToken();\\n        if (amount == 0) revert InvalidAmount();\\n\\n        // Create the vesting wallet\\n        vestingWallet = address(new VestingWallet(beneficiary, startTime, duration));\\n\\n        // Transfer tokens to the vesting wallet\\n        IERC20(token).safeTransferFrom(msg.sender, vestingWallet, amount);\\n\\n        emit VestingWalletCreated(beneficiary, vestingWallet, startTime, duration, token, amount);\\n        return vestingWallet;\\n    }\\n}\\n\",\"keccak256\":\"0x6a3c4821d3c0d85302948a4888504011a230d994848fd02d519e0f09054d2d86\",\"license\":\"MIT\"},\"src/interfaces/IStream.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport { StreamTypes } from \\\"../types/StreamTypes.sol\\\";\\nimport { PositionTypes } from \\\"../types/PositionTypes.sol\\\";\\n\\ninterface IStream {\\n    function initialize(\\n        StreamTypes.CreateStreamMessage memory createStreamMessage,\\n        address positionStorageAddress\\n    ) external;\\n\\n    function withdraw(uint256 cap) external;\\n\\n    function subscribe(uint256 amountIn) external;\\n\\n    function exitStream() external;\\n\\n    function finalizeStream() external;\\n\\n    function syncStreamExternal() external;\\n\\n    function syncPositionExternal(address user) external;\\n\\n    function cancelStream() external;\\n\\n    function cancelWithAdmin() external;\\n\\n    // View functions\\n    function getStreamStatus() external view returns (StreamTypes.Status);\\n\\n    function getStreamState() external view returns (StreamTypes.StreamState memory);\\n\\n    function getPosition(address user) external view returns (PositionTypes.Position memory);\\n\\n    // State variables getters (since they're public)\\n    function creator() external view returns (address);\\n\\n    function positionStorageAddress() external view returns (address);\\n\\n    function streamFactoryAddress() external view returns (address);\\n\\n    function updateStreamMetadata(string memory metadataIpfsHash) external;\\n}\\n\",\"keccak256\":\"0x640bfeea07e5ff7debdfef3ca7190a23c1b40ee94492bf72ea9aec72ca04bb05\",\"license\":\"MIT\"},\"src/interfaces/IStreamEvents.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n\\n\\ninterface IStreamEvents {\\n    event StreamCreated(\\n        address indexed streamFactoryAddress,\\n        address streamOutToken,\\n        address streamInToken,\\n        address streamAddress,\\n        address creator,\\n        address positionStorageAddress,\\n        uint256 streamOutAmount,\\n        uint256 bootstrappingStartTime,\\n        uint256 streamStartTime,\\n        uint256 streamEndTime,\\n        uint256 threshold,\\n        string metadataIpfsHash,\\n        string tosVersion,\\n        uint16 streamId\\n    );\\n\\n    event StreamStateUpdated(\\n        address indexed streamAddress,\\n        uint256 lastUpdated,\\n        uint256 distIndex,\\n        uint256 outRemaining,\\n        uint256 inSupply,\\n        uint256 spentIn,\\n        uint256 currentStreamedPrice\\n    );\\n\\n    event Subscribed(\\n        address indexed streamAddress,\\n        address indexed subscriber,\\n        uint256 positionInBalance,\\n        uint256 positionShares,\\n        uint256 positionLastUpdateTime,\\n        uint256 positionSpentIn,\\n        uint256 positionPurchased,\\n        uint256 positionIndex,\\n        uint256 streamInSupply,\\n        uint256 streamShares\\n    );\\n\\n    event StreamSynced(\\n        address indexed streamAddress,\\n        uint256 lastUpdated,\\n        uint8 newStatus,\\n        uint256 distIndex,\\n        uint256 outRemaining,\\n        uint256 inSupply,\\n        uint256 spentIn,\\n        uint256 currentStreamedPrice\\n    );\\n\\n    event PositionSynced(\\n        address indexed streamAddress,\\n        address indexed subscriber,\\n        uint256 positionInBalance,\\n        uint256 positionShares,\\n        uint256 positionLastUpdateTime,\\n        uint256 positionSpentIn,\\n        uint256 positionPurchased,\\n        uint256 positionIndex\\n    );\\n\\n    event Withdrawn(\\n        address indexed streamAddress,\\n        address indexed subscriber,\\n        uint256 positionInBalance,\\n        uint256 positionShares,\\n        uint256 positionLastUpdateTime,\\n        uint256 positionSpentIn,\\n        uint256 positionPurchased,\\n        uint256 positionIndex,\\n        uint256 streamInSupply,\\n        uint256 streamShares\\n    );\\n\\n    event ExitRefunded(\\n        address indexed streamAddress,\\n        address indexed subscriber,\\n        uint256 inBalance,\\n        uint256 spentIn,\\n        uint256 exitTimestamp\\n    );\\n    event ExitStreamed(\\n        address indexed streamAddress,\\n        address indexed subscriber,\\n        uint256 purchased,\\n        uint256 spentIn,\\n        uint256 index,\\n        uint256 inBalance,\\n        uint256 exitTimestamp\\n    );\\n\\n    event FinalizedStreamed(\\n        address indexed streamAddress,\\n        address indexed creator,\\n        uint256 creatorRevenue,\\n        uint256 exitFeeAmount,\\n        uint256 refundedOutAmount\\n    );\\n\\n    event FinalizedRefunded(address indexed streamAddress, address indexed creator, uint256 refundedOutAmount);\\n\\n    event FactoryInitialized(\\n        address indexed factory,\\n        address streamImplementationAddress,\\n        address poolWrapperAddress,\\n        address feeCollector,\\n        address protocolAdmin,\\n        address streamCreationFeeToken,\\n        address[] acceptedInSupplyTokens,\\n        uint256 streamCreationFee,\\n        uint256 exitFeeRatio,\\n        uint256 minWaitingDuration,\\n        uint256 minBootstrappingDuration,\\n        uint256 minStreamDuration,\\n        string tosVersion,\\n        address vestingAddress\\n    );\\n\\n    event ParamsUpdated(\\n        address indexed factory,\\n        uint256 streamCreationFee,\\n        uint256 exitFeeRatio,\\n        uint256 minWaitingDuration,\\n        uint256 minBootstrappingDuration,\\n        uint256 minStreamDuration,\\n        string tosVersion\\n    );\\n\\n    event FeeCollectorUpdated(address indexed factory, address newFeeCollector);\\n\\n    event ProtocolAdminUpdated(address indexed factory, address newProtocolAdmin);\\n\\n    event FrozenStateUpdated(address indexed factory, bool frozen);\\n\\n    event AcceptedTokensUpdated(address indexed factory, address[] tokensAdded, address[] tokensRemoved);\\n\\n    event StreamCancelled(address indexed streamAddress, address creator, uint256 outSupply, uint8 status);\\n\\n    event VestingContractDeployed(address indexed factoryAddress, address vestingContract);\\n\\n    event PoolWrapperUpdated(address indexed factoryAddress, address poolWrapper);\\n\\n    event StreamMetadataUpdated(address indexed streamAddress, string metadataIpfsHash);\\n}\\n\",\"keccak256\":\"0x92091d344feeed02ad546772b69d634b2074a0a938545583959edad0ca9814d0\",\"license\":\"MIT\"},\"src/interfaces/IStreamFactoryErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n// StreamFactory errors\\ninterface IStreamFactoryErrors {\\n    // StreamFactory errors\\n    error InvalidBootstrappingStartTime();\\n    error InvalidStreamStartTime();\\n    error InvalidStreamEndTime();\\n    error StreamDurationTooShort();\\n    error BootstrappingDurationTooShort();\\n    error WaitingDurationTooShort();\\n    error ContractFrozen();\\n    error InvalidExitFeeRatio();\\n    error ZeroOutSupplyNotAllowed();\\n    error StreamInputTokenNotAccepted();\\n    error InvalidBootstrappingTime();\\n    error StreamStartMustBeAfterBootstrapping();\\n    error StreamEndMustBeAfterStart();\\n    error InvalidToSVersion();\\n    error TokenTransferFailed();\\n    error StreamAddressPredictionFailed();\\n    error InvalidFeeCollector();\\n    error InvalidProtocolAdmin();\\n    error NotAdmin();\\n    error InvalidPoolWrapper();\\n    error InvalidImplementationAddress();\\n    error InvalidStreamCreationFeeToken();\\n    error AlreadyInitialized();\\n    error InvalidAcceptedInSupplyTokens();\\n    error InvalidStreamImplementationAddress();\\n    error InvalidOutSupplyToken();\\n    error InvalidCreator();\\n    error InvalidVestingDuration();\\n    error SameInputAndOutputToken();\\n}\\n\",\"keccak256\":\"0x1059a02057056743d98e39bdad19edfce7b4ed27fcef0321201e3a9c2297d887\",\"license\":\"MIT\"},\"src/lib/TransferLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { SafeERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n/**\\n * @title TransferLib\\n * @author Adnan Deniz Corlu (@Ninjatosba)\\n * @notice Library for handling both ERC20 and native token transfers\\n * @dev Provides a unified interface for token transfers, automatically detecting\\n *      whether to use ERC20 transfers or native ETH transfers based on token address\\n */\\nlibrary TransferLib {\\n    using SafeERC20 for IERC20;\\n\\n    /// @notice Native token address (zero address)\\n    address public constant NATIVE_TOKEN = address(0);\\n\\n    // Deprecated helpers removed: transferFrom, transfer, balanceOf, allowance\\n\\n    /**\\n     * @dev Pull funds into this contract. Supports native token and ERC20.\\n     * @param token Token address (zero address for native token)\\n     * @param payer Address that pays the funds (ignored for native token)\\n     * @param amount Amount to pull\\n     */\\n    function pullFunds(\\n        address token,\\n        address payer,\\n        uint256 amount\\n    ) internal {\\n        if (amount == 0) {\\n            return;\\n        }\\n\\n        if (token == NATIVE_TOKEN) {\\n            if (msg.value != amount) revert IncorrectNativeAmount(amount, msg.value);\\n            // For native tokens, ETH is already transferred with this call\\n            return;\\n        }\\n\\n        // ERC20\\n        IERC20(token).safeTransferFrom(payer, address(this), amount);\\n    }\\n\\n    /**\\n     * @dev Push funds from this contract to a recipient. Supports native token and ERC20.\\n     * @param token Token address (zero address for native token)\\n     * @param to Recipient address\\n     * @param amount Amount to push\\n     */\\n    function pushFunds(\\n        address token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        if (amount == 0) return;\\n\\n        if (token == NATIVE_TOKEN) {\\n            (bool success, ) = to.call{ value: amount }(\\\"\\\");\\n            if (!success) revert NativeTokenTransferFailed();\\n            return;\\n        }\\n\\n        // ERC20\\n        IERC20(token).safeTransfer(to, amount);\\n    }\\n\\n    // ============ Errors ============\\n\\n    error NativeTokenTransferFailed();\\n    error IncorrectNativeAmount(uint256 expected, uint256 actual);\\n}\\n\",\"keccak256\":\"0xea926738ebb18061084e263f1020c0eb82c9cddcc9f05687533014cad9b0a80a\",\"license\":\"MIT\"},\"src/lib/math/DecimalMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/**\\n * @title DecimalMath\\n * @author Adnan Deniz Corlu (@Ninjatosba)\\n * @notice Library for high-precision decimal arithmetic operations\\n * @dev Provides decimal arithmetic with 6 decimal places precision (1e6):\\n *      - Supports basic arithmetic operations (add, sub, mul, div)\\n *      - Includes comparison operations (gt, lt)\\n *      - Provides conversion between decimals and integers\\n *      - Used throughout the protocol for precise calculations\\n */\\n\\n/**\\n * @title Decimal type and math operations\\n * @dev Library for handling decimal math operations with fixed-point arithmetic\\n */\\n\\nstruct Decimal {\\n    uint256 value; // Value scaled by DECIMAL_PRECISION\\n}\\n\\n/**\\n * @title DecimalMath\\n * @dev Library for handling decimal math operations with fixed-point arithmetic\\n */\\nlibrary DecimalMath {\\n    // We'll use 6 decimal places for precision\\n    uint256 public constant DECIMAL_PRECISION = 1e6;\\n\\n    // Convert a regular number to a Decimal\\n    function fromNumber(uint256 value) internal pure returns (Decimal memory) {\\n        return Decimal({ value: value * DECIMAL_PRECISION });\\n    }\\n\\n    // Convert a Decimal to a regular number while keeping the remainder\\n    function toNumber(Decimal memory d) internal pure returns (uint256, Decimal memory) {\\n        return (d.value / DECIMAL_PRECISION, Decimal({ value: d.value % DECIMAL_PRECISION }));\\n    }\\n\\n    // Floor division for Decimal\\n    function floor(Decimal memory d) internal pure returns (uint256) {\\n        return d.value / DECIMAL_PRECISION;\\n    }\\n\\n    // Ceiling division for Decimal\\n    function ceil(Decimal memory d) internal pure returns (uint256) {\\n        return (d.value + DECIMAL_PRECISION - 1) / DECIMAL_PRECISION;\\n    }\\n\\n    // Multiply two Decimals\\n    function mul(Decimal memory a, Decimal memory b) internal pure returns (Decimal memory) {\\n        return Decimal({ value: (a.value * b.value) / DECIMAL_PRECISION });\\n    }\\n\\n    // Multiply Decimal by a scalar\\n    function mulScalar(Decimal memory a, uint256 scalar) internal pure returns (Decimal memory) {\\n        return Decimal({ value: a.value * scalar });\\n    }\\n\\n    // Divide two Decimals\\n    function div(Decimal memory a, Decimal memory b) internal pure returns (Decimal memory) {\\n        return Decimal({ value: (a.value * DECIMAL_PRECISION) / b.value });\\n    }\\n\\n    // Divide Decimal by a scalar\\n    function divScalar(Decimal memory a, uint256 scalar) internal pure returns (Decimal memory) {\\n        return Decimal({ value: a.value / scalar });\\n    }\\n\\n    // Add two Decimals\\n    function add(Decimal memory a, Decimal memory b) internal pure returns (Decimal memory) {\\n        return Decimal({ value: a.value + b.value });\\n    }\\n\\n    // Subtract two Decimals\\n    function sub(Decimal memory a, Decimal memory b) internal pure returns (Decimal memory) {\\n        return Decimal({ value: a.value - b.value });\\n    }\\n\\n    // From ratio to Decimal\\n    function fromRatio(uint256 num, uint256 denom) internal pure returns (Decimal memory) {\\n        return Decimal({ value: (num * DECIMAL_PRECISION) / denom });\\n    }\\n\\n    // > operator for Decimals\\n    function gt(Decimal memory a, Decimal memory b) internal pure returns (bool) {\\n        return a.value > b.value;\\n    }\\n\\n    // < operator for Decimals\\n    function lt(Decimal memory a, Decimal memory b) internal pure returns (bool) {\\n        return a.value < b.value;\\n    }\\n}\\n\",\"keccak256\":\"0x7e0f27cd31d784493bf5ae906477c16b2c5e03f06f5f5d530d8d6d6dbb222deb\",\"license\":\"MIT\"},\"src/storage/PositionStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/**\\n * @title PositionStorage\\n * @author Adnan Deniz Corlu (@Ninjatosba)\\n * @notice Secure, isolated storage for user participation data in StreamSwap streams\\n * @dev PositionStorage implements a separation-of-concerns architecture where user data\\n *      is isolated from stream logic for enhanced security and modularity. Each stream\\n *      deploys its own PositionStorage instance, ensuring data isolation and preventing\\n *      cross-stream interference.\\n *      \\n *      Security Features:\\n *      - Single-stream access control: Only the deploying stream can modify data\\n *      - Immutable stream address: Cannot be changed after deployment\\n *      - Isolated storage: Each stream has its own position data\\n *      - Comprehensive position tracking: Balances, shares, distributions, exit status\\n *   \\n */\\n\\nimport { PositionTypes } from \\\"../types/PositionTypes.sol\\\";\\nimport { Decimal, DecimalMath } from \\\"../lib/math/DecimalMath.sol\\\";\\n\\ncontract PositionStorage {\\n    using PositionTypes for PositionTypes.Position;\\n\\n    error UnauthorizedAccess();\\n    error InvalidStreamContractAddress();\\n\\n    mapping(address => PositionTypes.Position) private positions;\\n    address public immutable STREAM_CONTRACT_ADDRESS;\\n\\n    constructor(address contractAddress) {\\n        if (contractAddress == address(0)) revert InvalidStreamContractAddress();\\n        STREAM_CONTRACT_ADDRESS = contractAddress;\\n    }\\n\\n    function getPosition(address owner) external view returns (PositionTypes.Position memory) {\\n        return positions[owner];\\n    }\\n\\n    modifier onlyStreamContract() {\\n        if (msg.sender != STREAM_CONTRACT_ADDRESS) revert UnauthorizedAccess();\\n        _;\\n    }\\n\\n    function createPosition(\\n        address owner,\\n        uint256 inBalance,\\n        uint256 shares,\\n        Decimal memory index\\n    ) external onlyStreamContract {\\n        positions[owner] = PositionTypes.Position(\\n            inBalance,\\n            shares,\\n            index,\\n            block.timestamp,\\n            DecimalMath.fromNumber(0),\\n            0,\\n            0,\\n            0\\n        );\\n    }\\n\\n    function updatePosition(address owner, PositionTypes.Position memory position) external onlyStreamContract {\\n        positions[owner] = position;\\n    }\\n\\n    function setExitDate(address owner, uint256 exitDate) external onlyStreamContract {\\n        positions[owner].exitDate = exitDate;\\n    }\\n}\\n\",\"keccak256\":\"0x377e24af7cbdd7522429d30e07cf3568a93ed7a9fe482f7333c8e0d07fba8bb1\",\"license\":\"MIT\"},\"src/types/PositionTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport { Decimal } from \\\"../lib/math/DecimalMath.sol\\\";\\n\\nlibrary PositionTypes {\\n    struct Position {\\n        uint256 inBalance;\\n        uint256 shares;\\n        Decimal index;\\n        uint256 lastUpdateTime;\\n        Decimal pendingReward;\\n        uint256 spentIn;\\n        uint256 purchased;\\n        uint256 exitDate;\\n    }\\n}\\n\",\"keccak256\":\"0x665cd05889775e5034a2ad192fdbbcdc4b68631f4e1507af7468eba208d71197\",\"license\":\"MIT\"},\"src/types/StreamFactoryTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport { Decimal } from \\\"../lib/math/DecimalMath.sol\\\";\\n\\nlibrary StreamFactoryTypes {\\n    struct Params {\\n        uint256 streamCreationFee;\\n        address streamCreationFeeToken;\\n        Decimal exitFeeRatio;\\n        uint256 minWaitingDuration;\\n        uint256 minBootstrappingDuration;\\n        uint256 minStreamDuration;\\n        address feeCollector;\\n        address protocolAdmin;\\n        string tosVersion;\\n        address vestingFactoryAddress;\\n        address poolWrapperAddress;\\n        address streamImplementationAddress;\\n    }\\n\\n    struct InitializeStreamMessage {\\n        uint256 streamCreationFee;\\n        address streamCreationFeeToken;\\n        Decimal exitFeeRatio;\\n        uint256 minWaitingDuration;\\n        uint256 minBootstrappingDuration;\\n        uint256 minStreamDuration;\\n        address feeCollector;\\n        address protocolAdmin;\\n        string tosVersion;\\n        address poolWrapperAddress;\\n        address streamImplementationAddress;\\n        address[] acceptedInSupplyTokens;\\n    }\\n}\\n\",\"keccak256\":\"0x83fad9ed9d507beb88530810ee53f1e798cef5dff3fc4c94edcfbcb9e63c35f5\",\"license\":\"MIT\"},\"src/types/StreamTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport { Decimal } from \\\"../lib/math/DecimalMath.sol\\\";\\n\\nlibrary StreamTypes {\\n    enum Status {\\n        Waiting,\\n        Bootstrapping,\\n        Active,\\n        Ended,\\n        FinalizedRefunded,\\n        FinalizedStreamed,\\n        Cancelled\\n    }\\n\\n    struct CreateStreamMessage {\\n        address creator;\\n        address inSupplyToken;\\n        address outSupplyToken;\\n        uint256 streamOutAmount;\\n        uint256 threshold;\\n        uint256 bootstrappingStartTime;\\n        uint256 streamStartTime;\\n        uint256 streamEndTime;\\n        StreamMetadata metadata;\\n        VestingInfo creatorVesting;\\n        VestingInfo beneficiaryVesting;\\n        PoolInfo poolInfo;\\n        string tosVersion;\\n    }\\n    struct StreamTimes {\\n        uint256 bootstrappingStartTime;\\n        uint256 streamStartTime;\\n        uint256 streamEndTime;\\n    }\\n\\n    struct StreamMetadata {\\n        string ipfsHash;\\n    }\\n\\n    struct StreamState {\\n        uint256 outRemaining;\\n        Decimal distIndex;\\n        uint256 spentIn;\\n        uint256 shares;\\n        Decimal currentStreamedPrice;\\n        uint256 threshold;\\n        uint256 inSupply;\\n        uint256 outSupply;\\n        uint256 lastUpdated;\\n    }\\n\\n    struct StreamTokens {\\n        address inSupplyToken;\\n        address outSupplyToken;\\n    }\\n\\n    struct VestingInfo {\\n        bool isVestingEnabled;\\n        uint64 vestingDuration;\\n    }\\n\\n    struct PoolInfo {\\n        uint256 poolOutSupplyAmount;\\n    }\\n\\n    struct PostStreamActions {\\n        PoolInfo poolInfo;\\n        VestingInfo creatorVesting;\\n        VestingInfo beneficiaryVesting;\\n    }\\n}\\n\",\"keccak256\":\"0x70f9eab04f35219042acaa9af39185d6e27ab2504bbfa2bf976b7d83669de4d4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60803461008e57601f62003d6438819003918201601f19168301916001600160401b038311848410176100935780849260209460405283398101031261008e57516001600160a01b0381169081900361008e57801561007c57600980546001600160a01b031916919091179055604051613cba9081620000aa8239f35b604051632bf75bc360e21b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60808060405260043610156200001457600080fd5b600090813560e01c908163054f7d9c1462001e975750806314d98de51462001e73578063158ef93e1462001e4b5780631629461b14620017dc5780631c2a28f714620016de57806333907d1e14620017205780635a91b3b214620016de5780635e615a6b14620014d55780636514b2da1462001440578063774ef43b1462000de75780637c526bb314620013025780637e932d32146200128f5780637f2e72ed146200122e5780638bd999fd14620011ce57806394558e291462001152578063ae383c0c14620010f2578063bfb7922414620010be578063c1d3be8b146200102e578063cff0ab961462000f54578063d04fed631462000ebb578063d2c35ce81462000e2a578063e899f3d71462000de7578063e8aa8e5e1462000d87578063f21e20061462000ba7578063f3425b1014620002a8578063fd05bcc2146200020b5763fd7917f7146200016657600080fd5b346200020857602036600319011262000208576200018362001f2b565b6009546001600160a01b03919082163303620001f657168015620001e457806001600160601b0360a01b600c541617600c556040519081527f0e68834ff868f2c0042bd32422f7e8ce1ebbc6341974bb698c0f89a7a29f1f6a60203092a280f35b60405163405b556360e11b8152600490fd5b604051637bfa4b9f60e01b8152600490fd5b80fd5b50346200020857602036600319011262000208576040516200022d8162001eed565b60043581526009546001600160a01b03163303620001f6576200024f62002409565b81519051106200029657518060045560008051602062003c658339815191526002549160055490620002906006546007549060405194859430988662002258565b0390a280f35b604051632aa4e67b60e01b8152600490fd5b50602036600319011262000208576001600160401b036004351162000208576101e06004353603600319011262000208576040516101a081018181106001600160401b0382111762000b93576040526200030760043560040162001f47565b81526200031960246004350162001f47565b60208201526200032e60446004350162001f47565b6040820152600435606481013560608301526084810135608083015260a481013560a083015260c481013560c083015260e481013560e083015261010401356001600160401b03811162000b8f57602060043582013603600319011262000b8f57604051906200039e8262001eed565b6004818135010135906001600160401b038211620009ae576004620003ca923692823501010162001f99565b8152610100820152620003e43661012460043501620021a4565b610120820152620003fc3661016460043501620021a4565b61014082015262000414366101a46004350162001f5c565b6101608201526101c460043501356001600160401b03811162000b8f576200044490600436918135010162001f99565b61018082015260ff600f541662000b7d5760608101511562000b6b5760408101516001600160a01b03161562000b595780516001600160a01b03161562000b47576020818101516001600160a01b03168352829052604082205460ff161562000b3557602081015160408201516001600160a01b0390811691161462000b2357620004d461012082015162002431565b620004e461014082015162002431565b60a081015160c082015160e083015182421162000b115781831162000aff5780821162000aed578162000517916200246e565b6007541162000adb57816200052c916200246e565b6006541162000ac957620005429042906200246e565b6005541162000ab7576101808101516040516200057f602082816200057181830196878151938492016200203d565b810103808452018262001f09565b519020604051600a5481856200059583620020bc565b926001811690811562000a97575060011462000a49575b620005c1925003601f19810183528262001f09565b602081519101200362000a3757600354600254620005ea9133906001600160a01b031662002492565b6003546008546002546200060d9290916001600160a01b03908116911662002562565b600d54608881901c62ffffff16763d602d80600a3d3981f3363d3d373d3d3d363d7300000017835260781b6effffffffffffffffffffffffffffff19166e5af43d82803e903d91602b57fd5bf3176020526001600160a01b036037600984f0168015620009f957604051806105cb8101106001600160401b036105cb83011117620009e5576105cb6200367a82396105cb81018281528190036020019084f08015620009da576001549261ffff80851614620009c65761ffff6001818616011661ffff1985161760015561ffff84168552600e60205260408520836001600160601b0360a01b8254161790556060810151610160820151518101809111620009b257806200072d62000743923360018060a01b0360408701511662002492565b604083015185906001600160a01b031662002562565b823b15620009ae5760408051630170627160e31b81526004810182905282516001600160a01b0390811660448301526020808501518216606484015292840151166084820152606083015160a4820152608083015160c482015260a083015160e482015260c083015161010482015260e08301516101248201526101008301516101e061014483015251610224820192909252908690829081906200085f90620007f39061024484019062002062565b61012087015180511515610164850152602001516001600160401b0316610184840152610140870151805115156101a4850152602001516001600160401b03166101c4840152610160870151516101e48401526101808701518382036043190161020485015262002062565b6001600160a01b0387166024830152038183885af18015620009a3576200096f575b506200095e6200094f7f1d8516ec56b1281623aae1185f9b8f9f8a54fdd2ca3b48a4206a9228d500bf76949361ffff9360018060a01b036040820151169560018060a01b036020830151169260018060a01b0383511690606084015160a08501519160c08601519360e0870151956101006080890151980151519860206040519e8f908152015260408d015260608c015260018060a01b031660808b015260a08a015260c089015260e08801526101008701526101208601526101a06101408601526101a085019062002062565b838103610160850152620020f9565b93166101808201528030930390a280f35b6001600160401b0381969296116200098f57604052936200095e62000881565b634e487b7160e01b82526041600452602482fd5b6040513d88823e3d90fd5b8480fd5b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b85526011600452602485fd5b6040513d85823e3d90fd5b634e487b7160e01b84526041600452602484fd5b60405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606490fd5b604051635d0b6cc760e01b8152600490fd5b5050600a8552818560008051602062003c458339815191525b83821062000a7c5750506020620005c192820101620005ac565b60209192508060019154838588010152019101839162000a62565b60209250620005c194915060ff19168284015280151502820101620005ac565b604051635bdfbd0360e11b8152600490fd5b6040516372904fb160e01b8152600490fd5b6040516318861b4960e01b8152600490fd5b6040516349f8456b60e11b8152600490fd5b604051633060050d60e21b8152600490fd5b6040516341f01d5760e01b8152600490fd5b604051638b1202a160e01b8152600490fd5b60405163cc3ca47b60e01b8152600490fd5b6040516332db94d160e21b8152600490fd5b6040516372146d6160e11b8152600490fd5b604051634d5bb2d560e11b8152600490fd5b604051634051e96160e01b8152600490fd5b8280fd5b634e487b7160e01b83526041600452602483fd5b5034620002085760208060031936011262000d83576001600160401b039060043582811162000d7f5762000be090369060040162001f99565b6009549092906001600160a01b03163303620001f6578251908111620009e55762000c0d600a54620020bc565b601f811162000d29575b5081601f821160011462000ca557908060008051602062003c658339815191529392869162000c99575b508160011b916000199060031b1c191617600a555b60025490600454600554600654916007549360405195865285015260408401526060830152608082015260c060a08201528062000290309460c083019062002062565b90508401513862000c41565b600a855260008051602062003c4583398151915290601f198316865b81811062000d11575091839160008051602062003c6583398151915295946001941062000cf7575b5050811b01600a5562000c56565b86015160001960f88460031b161c19169055388062000ce9565b91928560018192868a01518155019401920162000cc1565b600a855260008051602062003c45833981519152601f830160051c81019184841062000d74575b601f0160051c01905b81811062000d68575062000c17565b85815560010162000d59565b909150819062000d50565b8380fd5b5080fd5b5034620002085760203660031901126200020857600954600435906001600160a01b03163303620001f6578060055560008051602062003c6583398151915260025491600454620002906006546007549060405194859430988662002258565b503462000208576020366003190112620002085760043561ffff811680910362000d8357906020918152600e8252604060018060a01b0391205416604051908152f35b503462000208576020366003190112620002085762000e4862001f2b565b6009546001600160a01b03919082163303620001f65716801562000ea957806001600160601b0360a01b60085416176008556040519081527f5d16ad41baeb009cd23eb8f6c7cde5c2e0cd5acf4a33926ab488875c37c37f3860203092a280f35b60405163bb0bac9960e01b8152600490fd5b5034620002085780600319360112620002085761ffff906001826001541662000ee48162002220565b9280835b62000f0a575b6040516020808252819062000f069082018862001ffe565b0390f35b8581168381101562000f4d57808352600e602052604083205485949392889286926001600160a01b03169062000f41908a620021f5565b52011690919262000ee8565b5062000eee565b503462000208578060031936011262000208576002546003546040516001600160a01b039182169260209290919062000f8d8262001eed565b600454825262001017600554936006549060075484600854168560095416916040519462000fc88662000fc081620020f9565b038762001f09565b87600b54169988600c541698600d5416996040519d8e9d8e61018099815201525160408d015260608c015260808b015260a08a015260c089015260e08801528061010088015286019062002062565b926101208501526101408401526101608301520390f35b50346200020857602036600319011262000208576200104c62001f2b565b600954906001600160a01b03908183163303620001f65716908115620010ac576001600160a01b031916811760095560405190815230907f96c81c3f4599d5ad4b4ce465555174670819d69aa61f97cf8fdf4b80c1fbb32590602090a280f35b604051632bf75bc360e21b8152600490fd5b50346200020857602036600319011262000208576020620010e8620010e262001f2b565b6200239f565b6040519015158152f35b5034620002085760203660031901126200020857600954600435906001600160a01b03163303620001f6578060075560008051602062003c6583398151915260025491600454620002906005549260065460405194859430988662002258565b50346200020857602036600319011262000208576200117062001f2b565b6009546001600160a01b03919082163303620001f657166001600160601b0360a01b600354161760035560025460008051602062003c6583398151915260045460055490620002906006546007549060405194859430988662002258565b5034620002085760203660031901126200020857600954600435906001600160a01b03163303620001f6578060025560008051602062003c6583398151915260045460055490620002906006546007549060405194859430988662002258565b5034620002085760203660031901126200020857600954600435906001600160a01b03163303620001f6578060065560008051602062003c658339815191526002549160045462000290600554926007549060405194859430988662002258565b503462000208576020366003190112620002085760043580151580910362000d83576009546001600160a01b03163303620001f65760ff19600f541660ff821617600f556040519081527fc08a1a38ceb2f9f45e15007131834153026896150e4400ab4000fd1b131fb1db60203092a280f35b50346200020857604036600319011262000208576001600160401b039060043582811162000d83576200133a90369060040162002089565b909260243590811162000b8f576200135790369060040162002089565b60095490949192906001600160a01b039081163303620001f657845b8281106200140f5750845b868110620013da575050620002907f640a0a596c3bc7f91bc26965ed05efb8d3017a25c7b1822ba2ca3e33b2743cd5939495620013c960405194859460408652604086019162002357565b908382036020850152309662002357565b8082620013f5620013ef6001948b8a62002331565b62002342565b168752866020526040872060ff198154169055016200137e565b808262001424620013ef600194878962002331565b16875286602052604087208260ff198254161790550162001373565b50346200020857602036600319011262000208576200145e62001f2b565b6009546001600160a01b03919082163303620001f657168015620014c3576001600160601b0360a01b600d541617600d5560025460008051602062003c6583398151915260045460055490620002906006546007549060405194859430988662002258565b60405163325c055b60e21b8152600490fd5b50346200020857806003193601126200020857610160604051620014f98162001eba565b828152826020820152604051620015108162001eed565b83815260408201528260608201528260808201528260a08201528260c08201528260e08201526060610100820152826101208201528261014082015201526040516200155c8162001eba565b60025481526003546001600160a01b03166020820152604051620015808162001eed565b60045481526040828101919091526005546060830152600654608083015260075460a08301526008546001600160a01b0390811660c08401526009541660e083015251620015db81620015d381620020f9565b038262001f09565b61010082015260018060a01b03600b541661012082015260018060a01b03600c541661014082015260018060a01b03600d54166101608201526040518091602082528051602083015260018060a01b036020820151166040830152604081015151606083015260608101516080830152608081015160a083015260a081015160c083015260018060a01b0360c08201511660e083015260018060a01b0360e082015116610100830152610100810151620016a561018091826101208601526101a085019062002062565b6101208301516001600160a01b039081166101408681019190915284015181166101608087019190915290930151909216908301520390f35b503462000208576020366003190112620002085760209060ff906040906001600160a01b036200170d62001f2b565b1681528084522054166040519015158152f35b5034620002085780600319360112620002085761ffff9060018260015416916200174a8362002220565b9281835b6200176b576040516020808252819062000f069082018862001ffe565b8581168281101562000f4d5784849392828993839752600e60209080825260018060a01b03908160408a205416895288835260ff60408a205416620017ba575b5050505001169091926200174e565b620017d192848a5252604088205416918a620021f5565b5238808080620017ab565b5034620002085760031960203682011262000d83576001600160401b036004351162000d83576101809060043536030112620002085760405190620018218262001eba565b6004356004013582526200183a60246004350162001f47565b6020830152620018503660446004350162001f5c565b6040830152600435606481013560608401526084810135608084015260a481013560a0840152620018849060c40162001f47565b60c08301526200189960e46004350162001f47565b60e083015261010460043501356001600160401b03811162000d8357620018c890600436918135010162001f99565b610100830152620018df6101246004350162001f47565b610120830152620018f66101446004350162001f47565b61014083015261016460043501356001600160401b03811162000d8357366023826004350101121562000d83576004818135010135620019368162001fe6565b9162001946604051938462001f09565b81835260208301903660248460051b8360043501010111620009ae57906024826004350101915b60248460051b82600435010101831062001e2c57505050506101608301526009546001600160a01b03163303620001f65760ff600f5460081c1662001e1b576040820151620019bb62002409565b90519051106200029657610160820151511562001e09576101408201516001600160a01b03161562001df7576101208201516001600160a01b031615620001e45760405180610ed08101106001600160401b03610ed0830111176200098f57610ed0620027aa823980610ed08101039082f0801562001dea576040516001600160a01b038216815230907f739fe22b8edefd6ce1fe32460f9cd54bf8e66fc7447f4c8a8131ce078a1988af90602090a2825160025560018060a01b036020840151166001600160601b0360a01b60035416176003556040830151516004556060830151600555608083015160065560a083015160075560018060a01b0360c0840151166001600160601b0360a01b60085416176008556101008301519283516001600160401b038111620009e55762001af6600a54620020bc565b601f811162001d7b575b506020601f821160011462001d02578495829394959262001cf6575b50508160011b916000199060031b1c191617600a555b60018060a01b0382166001600160601b0360a01b600b541617600b5560018060a01b03610120820151166001600160601b0360a01b600c541617600c5560018060a01b03610140820151166001600160601b0360a01b600d541617600d55825b610160820151805182101562001bd957600191906001600160a01b039062001bbc908390620021f5565b5116855284602052604085208260ff198254161790550162001b92565b50507ff5cd483996d35d97699fe885e0a7415610889f44d528c84777658c768c1044709062001ccc60018060a01b036101408301511660018060a01b03610120840151169260018060a01b0360c0820151169060018060a01b0360e08201511660018060a01b036020830151166101608301519462001ca08451966040860151519260608701519460808801519661010060a08a015199015199604080519e8f906101a09682526020820152015260608d015260808c01528060a08c01528a019062001ffe565b9560c089015260e088015261010087015261012086015261014085015283820361016085015262002062565b6001600160a01b03909316610180820152309281900390a261010061ff0019600f541617600f5580f35b01519050388062001b1c565b600a855260008051602062003c4583398151915290855b601f198416811062001d62575060019394959683601f1981161062001d48575b505050811b01600a5562001b32565b015160001960f88460031b161c1916905538808062001d39565b9091602060018192858b01518155019301910162001d19565b600a8552601f820160051c60008051602062003c45833981519152016020831062001dd3575b601f820160051c60008051602062003c4583398151915201811062001dc7575062001b00565b85815560010162001da1565b5060008051602062003c4583398151915262001da1565b50604051903d90823e3d90fd5b60405163c9c95bf560e01b8152600490fd5b60405163042ea06160e41b8152600490fd5b60405162dc149f60e41b8152600490fd5b60208060249362001e3d8662001f47565b81520193019291506200196d565b50346200020857806003193601126200020857602060ff600f5460081c166040519015158152f35b50346200020857806003193601126200020857602061ffff60015416604051908152f35b90503462000d83578160031936011262000d835760209060ff600f541615158152f35b61018081019081106001600160401b0382111762001ed757604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111762001ed757604052565b90601f801991011681019081106001600160401b0382111762001ed757604052565b600435906001600160a01b038216820362001f4257565b600080fd5b35906001600160a01b038216820362001f4257565b919082602091031262001f425760405162001f778162001eed565b91358252565b6001600160401b03811162001ed757601f01601f191660200190565b81601f8201121562001f425780359062001fb38262001f7d565b9262001fc3604051948562001f09565b8284526020838301011162001f4257816000926020809301838601378301015290565b6001600160401b03811162001ed75760051b60200190565b90815180825260208080930193019160005b8281106200201f575050505090565b83516001600160a01b03168552938101939281019260010162002010565b60005b838110620020515750506000910152565b818101518382015260200162002040565b906020916200207d815180928185528580860191016200203d565b601f01601f1916010190565b9181601f8401121562001f42578235916001600160401b03831162001f42576020808501948460051b01011162001f4257565b90600182811c92168015620020ee575b6020831014620020d857565b634e487b7160e01b600052602260045260246000fd5b91607f1691620020cc565b600a54600092916200210b82620020bc565b808252916020906001908181169081156200217e575060011462002130575b50505050565b92939450600a60005260008051602062003c45833981519152926000935b8585106200216a5750505060209250010190388080806200212a565b80548585018401529382019381016200214e565b92505050602093945060ff929192191683830152151560051b010190388080806200212a565b919082604091031262001f4257604080516001600160401b039181018281118282101762001ed7576040528093803590811515820362001f425760209183520135918216820362001f425760200152565b80518210156200220a5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b906200222c8262001fe6565b6200223b604051918262001f09565b82815280926200224e601f199162001fe6565b0190602036910137565b9492909391938552602093602086015260408501526060840152608083015260c060a0830152600091600a54906200229082620020bc565b918260c083015260e06001916001811690816000146200230d5750600114620022bc575b505050505090565b600a60009081529496955091929160008051602062003c458339815191525b838610620022f9575050505060e092935001013880808080620022b4565b8054858701830152948701948201620022db565b93955050505060e0935060ff191683830152151560051b01013880808080620022b4565b91908110156200220a5760051b0190565b356001600160a01b038116810362001f425790565b91908082526020809201929160005b82811062002375575050505090565b909192938280600192838060a01b036200238f8962001f47565b1681520195019392910162002366565b6001805460009261ffff92918316825b620023bf575b5050505050600090565b8385168181101562002402576000908152600e60205260409020546001600160a01b03838116911614620023fa5793820183169382620023af565b505091505090565b50620023b5565b6000604051620024198162001eed565b52604051620024288162001eed565b620f4240815290565b80511515908162002457575b506200244557565b604051632b39f6cb60e01b8152600490fd5b6001600160401b039150602001511615386200243d565b919082039182116200247c57565b634e487b7160e01b600052601160045260246000fd5b91801562002528576001600160a01b03928316928315620024fb57604051926323b872dd60e01b602085015216602483015230604483015260648201526064815260a08101918183106001600160401b0384111762001ed757620024f992604052620025f5565b565b509150508034036200250a5750565b60449060405190635693fffb60e01b82526004820152346024820152fd5b505050565b3d156200255d573d90620025418262001f7d565b9162002551604051938462001f09565b82523d6000602084013e565b606090565b91801562002528576001600160a01b03928316928315620025c3576040519263a9059cbb60e01b602085015216602483015260448201526044815260808101918183106001600160401b0384111762001ed757620024f992604052620025f5565b50600080935080929181925af1620025da6200252d565b5015620025e357565b604051630c08bcb960e21b8152600490fd5b60018060a01b03169060405160408101908082106001600160401b0383111762001ed7576200266b916040526020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af1620026646200252d565b9162002706565b805191821591848315620026df575b505050905015620026885750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b91938180945001031262000d8357820151908115158203620002085750803880846200267a565b919290156200276b57508151156200271c575090565b3b15620027265790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156200277f5750805190602001fd5b60405162461bcd60e51b815260206004820152908190620027a590602483019062002062565b0390fdfe6080806040523461001657610eb4908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600091823560e01c63c4b2da591461002c57600080fd5b346103345760a0366003190112610334576001600160a01b0393823585811691908290036103385760249485359567ffffffffffffffff95868816809803610334576044359187831680930361033057606435938a851680950361028c576084359587156103225750891561031257428a106103125783156103025784156102f25785156102e2578751610a6e8082019c91908b8e11828f10176102cf578c9d82919d9a9b9c9d61041183398b815260209e8f820152878d820152036060019083f080156102c55716998951908c82016323b872dd60e01b815233858401528c60448401528860648401526064835260a0830192808410838511176102a55760e0810184811084821117610293578d528e84527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152518491829190828b5af1903d156102b7573d8181116102a5578c5191601f8201601f19908116603f011683019081118382101761029357918f92916101b89594928f5281528581933d92013e5b8861033c565b8051918215918d8315610268575b5050509050156102135750508551938452878401528285015260608201528391907f515cf92d69f6cb24204f2d033637fc556ff95bd7c99a08bbd4d56500cab426db90608090a351908152f35b875162461bcd60e51b81529182018a9052602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b91938180945001031261028f578b015190811515820361028c57508038808d6101c6565b80fd5b5080fd5b634e487b7160e01b8652604188528686fd5b634e487b7160e01b8552604187528585fd5b50906101b8916060906101b2565b8a513d84823e3d90fd5b5050634e487b7160e01b82525060418352fd5b875163162908e360e11b81528390fd5b875163c1ab6dc160e01b81528390fd5b8751637616640160e01b81528390fd5b8751632ca4094f60e21b81528390fd5b631559b7d760e21b81528390fd5b8380fd5b8280fd5b8480fd5b9192901561039e5750815115610350575090565b3b156103595790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156103b15750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106103f7575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506103d456fe60e0601f610a6e38819003918201601f19168301916001600160401b03831184841017610118578084926060946040528339810103126101135780516001600160a01b038116919082810361011357610066604061005f6020850161012e565b930161012e565b92156100bb5760805260a05260c05260405161092b9081610143823960805181818161021c0152818161035c0152610411015260a0518181816101090152610738015260c051818181610579015261076d0152f35b60405162461bcd60e51b815260206004820152602a60248201527f56657374696e6757616c6c65743a2062656e6566696369617279206973207a65604482015269726f206164647265737360b01b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160401b03821682036101135756fe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c9081630a17b06b1461059d5781630fb5a6b414610558578163191655871461038b57816338af3eed14610347578163810ec23b1461030857816386d1a69f146101a55750806396132521146101895780639852595c14610152578063a3f8eace1461012d578063be9a6555146100e95763fbccedae0361001157346100e557816003193601126100e5576100de6020926100d9479154916100d48367ffffffffffffffff4216926105f0565b610729565b6106e4565b9051908152f35b5080fd5b50346100e557816003193601126100e5576020905167ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346100e55760203660031901126100e5576020906100de61014d6105d5565b6106f1565b50346100e55760203660031901126100e55760209181906001600160a01b036101796105d5565b1681526001845220549051908152f35b50346100e557816003193601126100e557602091549051908152f35b9190503461030457826003193601126103045782546101e06101d9826100d94267ffffffffffffffff166100d483476105f0565b80926105f0565b84557fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b60208351838152a18047106102c15783908190819081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af161024e6107e1565b5015610258578280f35b906020608492519162461bcd60e51b8352820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152fd5b815162461bcd60e51b8152602081850152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b8280fd5b5050346100e557806003193601126100e5576103226105d5565b6024359267ffffffffffffffff8416840361034457506020926100de9161064b565b80fd5b5050346100e557816003193601126100e557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b919050346103045760209081600319360112610554576103a96105d5565b6103b2816106f1565b9060018060a01b0380911690818752600185528387206103d38482546105f0565b9055817fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b868651868152a28351928584019163a9059cbb60e01b83527f0000000000000000000000000000000000000000000000000000000000000000166024850152604484015260448352608083019267ffffffffffffffff818510818611176105415760c08201908111858210176105415785528584527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460a0820152516104af9392918891829182855af16104a96107e1565b91610821565b805183811591821561051d575b50509050156104c9578380f35b5162461bcd60e51b815291820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260849150fd5b838092935001031261053d57820151801515810361053d578083386104bc565b8480fd5b634e487b7160e01b895260418852602489fd5b8380fd5b5050346100e557816003193601126100e5576020905167ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b905034610304576020366003190112610304573567ffffffffffffffff81168103610304576100de906100d4602094479054906105f0565b600435906001600160a01b03821682036105eb57565b600080fd5b919082018092116105fd57565b634e487b7160e01b600052601160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761063557604052565b634e487b7160e01b600052604160045260246000fd5b6040516370a0823160e01b81523060048201526001600160a01b03919091169190602081602481865afa9081156106d8576000916106a4575b506100d4906106a1936000526001602052604060002054906105f0565b90565b90506020813d6020116106d0575b816106bf60209383610613565b810103126105eb57516106a1610684565b3d91506106b2565b6040513d6000823e3d90fd5b919082039182116105fd57565b6106a19061070967ffffffffffffffff42168261064b565b6001600160a01b03909116600090815260016020526040902054906106e4565b67ffffffffffffffff918216917f00000000000000000000000000000000000000000000000000000000000000008116908184101561076b5750505050600090565b7f0000000000000000000000000000000000000000000000000000000000000000169261079884836105f0565b8111156107a6575050905090565b906107b0916106e4565b908181029181830414901517156105fd5781156107cb570490565b634e487b7160e01b600052601260045260246000fd5b3d1561081c573d9067ffffffffffffffff82116106355760405191610810601f8201601f191660200184610613565b82523d6000602084013e565b606090565b919290156108835750815115610835575090565b3b1561083e5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156108965750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106108dc575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506108b956fea2646970667358221220f6235be43f7faaf5ef42395a12abc7ae732a090157a3385a315158d316c1bd6064736f6c63430008180033a2646970667358221220b5fa9168d47ec92b437bc6882b20dd0185841b3e3ae16ed623710a66d315987264736f6c6343000818003360a03461009557601f6105cb38819003918201601f19168301916001600160401b0383118484101761009a5780849260209460405283398101031261009557516001600160a01b03811680820361009557156100835760805260405161051a90816100b18239608051818181607e0152818160e1015281816101b701526102660152f35b604051635a3f066960e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b60009160e08335811c90816316c1973914610333578163a3de7d1714610233578163c1ac10261461011457508063e82bb126146100cc5763fb33ce811461005b57600080fd5b346100c857816003193601126100c857610073610456565b6001600160a01b03917f0000000000000000000000000000000000000000000000000000000000000000831633036100ba5750168252816020526007602435918320015580f35b8351631a27eac360e11b8152fd5b8280fd5b505034610110578160031936011261011057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b848385346100c8576101203660031901126100c857610131610456565b9361010036602319011261022f57610147610471565b92602435845260208401906044358252610160366104c8565b848601908152606086016084358152602060a31936011261022b576101836104a8565b9160a43583526080880192835260a088019460c435865260c089019660e435885289019761010435895260018060a01b03807f000000000000000000000000000000000000000000000000000000000000000016330361021b5760079a9b9c168c528b6020528b2099518a555160018a0155515160028901555160038801555151908601555160058501555160068401555191015580f35b8151631a27eac360e11b81528790fd5b8780fd5b8380fd5b84848492346100c85760803660031901126100c857610250610456565b9061025a366104c8565b926001600160a01b03907f000000000000000000000000000000000000000000000000000000000000000082163303610324579585966007959661029c6104a8565b526102a56104a8565b908882526102b1610471565b976024358952602089016044358152828a0191825260608a019242845260808b0194855260a08b01968c885260c08c01988d8a528c01998d8b52168c528b6020528b2099518a555160018a0155515160028901555160038801555151908601555160058501555160068401555191015580f35b51631a27eac360e11b81528690fd5b9190503461022f57602036600319011261022f578261010094610354610456565b818561035e610471565b82815282602082015261036f6104a8565b838152868201528260608201526103846104a8565b838152608082015260a0810183905260c0810183905201526001600160a01b031681526020819052206103b5610471565b9381548552600182015492602086019384526103cf6104a8565b9160028401548352808701928352600384015490606088019182526103f26104a8565b9285015483526080880192835260058501549360a08901948552600760068701549660c08b01978852015496888a01978852825199518a525160208a0152515190880152516060870152515160808601525160a08501525160c08401525190820152f35b600435906001600160a01b038216820361046c57565b600080fd5b60405190610100820182811067ffffffffffffffff82111761049257604052565b634e487b7160e01b600052604160045260246000fd5b604051906020820182811067ffffffffffffffff82111761049257604052565b602090606319011261046c576104dc6104a8565b90606435825256fea2646970667358221220f9197761eae1a8839a6606c94eed8300af1b83793252e9badea713839d2d9ea864736f6c63430008180033c65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80411b059ef29e41429d7aa233c3c43e82806856b23c24bfb1f9e4c6efa5689a1a2646970667358221220a2c860855b2342d6ab93c027cbb1608bfa9fa692077e2a98a65edf9c615a040364736f6c63430008180033",
  "deployedBytecode": "0x60808060405260043610156200001457600080fd5b600090813560e01c908163054f7d9c1462001e975750806314d98de51462001e73578063158ef93e1462001e4b5780631629461b14620017dc5780631c2a28f714620016de57806333907d1e14620017205780635a91b3b214620016de5780635e615a6b14620014d55780636514b2da1462001440578063774ef43b1462000de75780637c526bb314620013025780637e932d32146200128f5780637f2e72ed146200122e5780638bd999fd14620011ce57806394558e291462001152578063ae383c0c14620010f2578063bfb7922414620010be578063c1d3be8b146200102e578063cff0ab961462000f54578063d04fed631462000ebb578063d2c35ce81462000e2a578063e899f3d71462000de7578063e8aa8e5e1462000d87578063f21e20061462000ba7578063f3425b1014620002a8578063fd05bcc2146200020b5763fd7917f7146200016657600080fd5b346200020857602036600319011262000208576200018362001f2b565b6009546001600160a01b03919082163303620001f657168015620001e457806001600160601b0360a01b600c541617600c556040519081527f0e68834ff868f2c0042bd32422f7e8ce1ebbc6341974bb698c0f89a7a29f1f6a60203092a280f35b60405163405b556360e11b8152600490fd5b604051637bfa4b9f60e01b8152600490fd5b80fd5b50346200020857602036600319011262000208576040516200022d8162001eed565b60043581526009546001600160a01b03163303620001f6576200024f62002409565b81519051106200029657518060045560008051602062003c658339815191526002549160055490620002906006546007549060405194859430988662002258565b0390a280f35b604051632aa4e67b60e01b8152600490fd5b50602036600319011262000208576001600160401b036004351162000208576101e06004353603600319011262000208576040516101a081018181106001600160401b0382111762000b93576040526200030760043560040162001f47565b81526200031960246004350162001f47565b60208201526200032e60446004350162001f47565b6040820152600435606481013560608301526084810135608083015260a481013560a083015260c481013560c083015260e481013560e083015261010401356001600160401b03811162000b8f57602060043582013603600319011262000b8f57604051906200039e8262001eed565b6004818135010135906001600160401b038211620009ae576004620003ca923692823501010162001f99565b8152610100820152620003e43661012460043501620021a4565b610120820152620003fc3661016460043501620021a4565b61014082015262000414366101a46004350162001f5c565b6101608201526101c460043501356001600160401b03811162000b8f576200044490600436918135010162001f99565b61018082015260ff600f541662000b7d5760608101511562000b6b5760408101516001600160a01b03161562000b595780516001600160a01b03161562000b47576020818101516001600160a01b03168352829052604082205460ff161562000b3557602081015160408201516001600160a01b0390811691161462000b2357620004d461012082015162002431565b620004e461014082015162002431565b60a081015160c082015160e083015182421162000b115781831162000aff5780821162000aed578162000517916200246e565b6007541162000adb57816200052c916200246e565b6006541162000ac957620005429042906200246e565b6005541162000ab7576101808101516040516200057f602082816200057181830196878151938492016200203d565b810103808452018262001f09565b519020604051600a5481856200059583620020bc565b926001811690811562000a97575060011462000a49575b620005c1925003601f19810183528262001f09565b602081519101200362000a3757600354600254620005ea9133906001600160a01b031662002492565b6003546008546002546200060d9290916001600160a01b03908116911662002562565b600d54608881901c62ffffff16763d602d80600a3d3981f3363d3d373d3d3d363d7300000017835260781b6effffffffffffffffffffffffffffff19166e5af43d82803e903d91602b57fd5bf3176020526001600160a01b036037600984f0168015620009f957604051806105cb8101106001600160401b036105cb83011117620009e5576105cb6200367a82396105cb81018281528190036020019084f08015620009da576001549261ffff80851614620009c65761ffff6001818616011661ffff1985161760015561ffff84168552600e60205260408520836001600160601b0360a01b8254161790556060810151610160820151518101809111620009b257806200072d62000743923360018060a01b0360408701511662002492565b604083015185906001600160a01b031662002562565b823b15620009ae5760408051630170627160e31b81526004810182905282516001600160a01b0390811660448301526020808501518216606484015292840151166084820152606083015160a4820152608083015160c482015260a083015160e482015260c083015161010482015260e08301516101248201526101008301516101e061014483015251610224820192909252908690829081906200085f90620007f39061024484019062002062565b61012087015180511515610164850152602001516001600160401b0316610184840152610140870151805115156101a4850152602001516001600160401b03166101c4840152610160870151516101e48401526101808701518382036043190161020485015262002062565b6001600160a01b0387166024830152038183885af18015620009a3576200096f575b506200095e6200094f7f1d8516ec56b1281623aae1185f9b8f9f8a54fdd2ca3b48a4206a9228d500bf76949361ffff9360018060a01b036040820151169560018060a01b036020830151169260018060a01b0383511690606084015160a08501519160c08601519360e0870151956101006080890151980151519860206040519e8f908152015260408d015260608c015260018060a01b031660808b015260a08a015260c089015260e08801526101008701526101208601526101a06101408601526101a085019062002062565b838103610160850152620020f9565b93166101808201528030930390a280f35b6001600160401b0381969296116200098f57604052936200095e62000881565b634e487b7160e01b82526041600452602482fd5b6040513d88823e3d90fd5b8480fd5b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b85526011600452602485fd5b6040513d85823e3d90fd5b634e487b7160e01b84526041600452602484fd5b60405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606490fd5b604051635d0b6cc760e01b8152600490fd5b5050600a8552818560008051602062003c458339815191525b83821062000a7c5750506020620005c192820101620005ac565b60209192508060019154838588010152019101839162000a62565b60209250620005c194915060ff19168284015280151502820101620005ac565b604051635bdfbd0360e11b8152600490fd5b6040516372904fb160e01b8152600490fd5b6040516318861b4960e01b8152600490fd5b6040516349f8456b60e11b8152600490fd5b604051633060050d60e21b8152600490fd5b6040516341f01d5760e01b8152600490fd5b604051638b1202a160e01b8152600490fd5b60405163cc3ca47b60e01b8152600490fd5b6040516332db94d160e21b8152600490fd5b6040516372146d6160e11b8152600490fd5b604051634d5bb2d560e11b8152600490fd5b604051634051e96160e01b8152600490fd5b8280fd5b634e487b7160e01b83526041600452602483fd5b5034620002085760208060031936011262000d83576001600160401b039060043582811162000d7f5762000be090369060040162001f99565b6009549092906001600160a01b03163303620001f6578251908111620009e55762000c0d600a54620020bc565b601f811162000d29575b5081601f821160011462000ca557908060008051602062003c658339815191529392869162000c99575b508160011b916000199060031b1c191617600a555b60025490600454600554600654916007549360405195865285015260408401526060830152608082015260c060a08201528062000290309460c083019062002062565b90508401513862000c41565b600a855260008051602062003c4583398151915290601f198316865b81811062000d11575091839160008051602062003c6583398151915295946001941062000cf7575b5050811b01600a5562000c56565b86015160001960f88460031b161c19169055388062000ce9565b91928560018192868a01518155019401920162000cc1565b600a855260008051602062003c45833981519152601f830160051c81019184841062000d74575b601f0160051c01905b81811062000d68575062000c17565b85815560010162000d59565b909150819062000d50565b8380fd5b5080fd5b5034620002085760203660031901126200020857600954600435906001600160a01b03163303620001f6578060055560008051602062003c6583398151915260025491600454620002906006546007549060405194859430988662002258565b503462000208576020366003190112620002085760043561ffff811680910362000d8357906020918152600e8252604060018060a01b0391205416604051908152f35b503462000208576020366003190112620002085762000e4862001f2b565b6009546001600160a01b03919082163303620001f65716801562000ea957806001600160601b0360a01b60085416176008556040519081527f5d16ad41baeb009cd23eb8f6c7cde5c2e0cd5acf4a33926ab488875c37c37f3860203092a280f35b60405163bb0bac9960e01b8152600490fd5b5034620002085780600319360112620002085761ffff906001826001541662000ee48162002220565b9280835b62000f0a575b6040516020808252819062000f069082018862001ffe565b0390f35b8581168381101562000f4d57808352600e602052604083205485949392889286926001600160a01b03169062000f41908a620021f5565b52011690919262000ee8565b5062000eee565b503462000208578060031936011262000208576002546003546040516001600160a01b039182169260209290919062000f8d8262001eed565b600454825262001017600554936006549060075484600854168560095416916040519462000fc88662000fc081620020f9565b038762001f09565b87600b54169988600c541698600d5416996040519d8e9d8e61018099815201525160408d015260608c015260808b015260a08a015260c089015260e08801528061010088015286019062002062565b926101208501526101408401526101608301520390f35b50346200020857602036600319011262000208576200104c62001f2b565b600954906001600160a01b03908183163303620001f65716908115620010ac576001600160a01b031916811760095560405190815230907f96c81c3f4599d5ad4b4ce465555174670819d69aa61f97cf8fdf4b80c1fbb32590602090a280f35b604051632bf75bc360e21b8152600490fd5b50346200020857602036600319011262000208576020620010e8620010e262001f2b565b6200239f565b6040519015158152f35b5034620002085760203660031901126200020857600954600435906001600160a01b03163303620001f6578060075560008051602062003c6583398151915260025491600454620002906005549260065460405194859430988662002258565b50346200020857602036600319011262000208576200117062001f2b565b6009546001600160a01b03919082163303620001f657166001600160601b0360a01b600354161760035560025460008051602062003c6583398151915260045460055490620002906006546007549060405194859430988662002258565b5034620002085760203660031901126200020857600954600435906001600160a01b03163303620001f6578060025560008051602062003c6583398151915260045460055490620002906006546007549060405194859430988662002258565b5034620002085760203660031901126200020857600954600435906001600160a01b03163303620001f6578060065560008051602062003c658339815191526002549160045462000290600554926007549060405194859430988662002258565b503462000208576020366003190112620002085760043580151580910362000d83576009546001600160a01b03163303620001f65760ff19600f541660ff821617600f556040519081527fc08a1a38ceb2f9f45e15007131834153026896150e4400ab4000fd1b131fb1db60203092a280f35b50346200020857604036600319011262000208576001600160401b039060043582811162000d83576200133a90369060040162002089565b909260243590811162000b8f576200135790369060040162002089565b60095490949192906001600160a01b039081163303620001f657845b8281106200140f5750845b868110620013da575050620002907f640a0a596c3bc7f91bc26965ed05efb8d3017a25c7b1822ba2ca3e33b2743cd5939495620013c960405194859460408652604086019162002357565b908382036020850152309662002357565b8082620013f5620013ef6001948b8a62002331565b62002342565b168752866020526040872060ff198154169055016200137e565b808262001424620013ef600194878962002331565b16875286602052604087208260ff198254161790550162001373565b50346200020857602036600319011262000208576200145e62001f2b565b6009546001600160a01b03919082163303620001f657168015620014c3576001600160601b0360a01b600d541617600d5560025460008051602062003c6583398151915260045460055490620002906006546007549060405194859430988662002258565b60405163325c055b60e21b8152600490fd5b50346200020857806003193601126200020857610160604051620014f98162001eba565b828152826020820152604051620015108162001eed565b83815260408201528260608201528260808201528260a08201528260c08201528260e08201526060610100820152826101208201528261014082015201526040516200155c8162001eba565b60025481526003546001600160a01b03166020820152604051620015808162001eed565b60045481526040828101919091526005546060830152600654608083015260075460a08301526008546001600160a01b0390811660c08401526009541660e083015251620015db81620015d381620020f9565b038262001f09565b61010082015260018060a01b03600b541661012082015260018060a01b03600c541661014082015260018060a01b03600d54166101608201526040518091602082528051602083015260018060a01b036020820151166040830152604081015151606083015260608101516080830152608081015160a083015260a081015160c083015260018060a01b0360c08201511660e083015260018060a01b0360e082015116610100830152610100810151620016a561018091826101208601526101a085019062002062565b6101208301516001600160a01b039081166101408681019190915284015181166101608087019190915290930151909216908301520390f35b503462000208576020366003190112620002085760209060ff906040906001600160a01b036200170d62001f2b565b1681528084522054166040519015158152f35b5034620002085780600319360112620002085761ffff9060018260015416916200174a8362002220565b9281835b6200176b576040516020808252819062000f069082018862001ffe565b8581168281101562000f4d5784849392828993839752600e60209080825260018060a01b03908160408a205416895288835260ff60408a205416620017ba575b5050505001169091926200174e565b620017d192848a5252604088205416918a620021f5565b5238808080620017ab565b5034620002085760031960203682011262000d83576001600160401b036004351162000d83576101809060043536030112620002085760405190620018218262001eba565b6004356004013582526200183a60246004350162001f47565b6020830152620018503660446004350162001f5c565b6040830152600435606481013560608401526084810135608084015260a481013560a0840152620018849060c40162001f47565b60c08301526200189960e46004350162001f47565b60e083015261010460043501356001600160401b03811162000d8357620018c890600436918135010162001f99565b610100830152620018df6101246004350162001f47565b610120830152620018f66101446004350162001f47565b61014083015261016460043501356001600160401b03811162000d8357366023826004350101121562000d83576004818135010135620019368162001fe6565b9162001946604051938462001f09565b81835260208301903660248460051b8360043501010111620009ae57906024826004350101915b60248460051b82600435010101831062001e2c57505050506101608301526009546001600160a01b03163303620001f65760ff600f5460081c1662001e1b576040820151620019bb62002409565b90519051106200029657610160820151511562001e09576101408201516001600160a01b03161562001df7576101208201516001600160a01b031615620001e45760405180610ed08101106001600160401b03610ed0830111176200098f57610ed0620027aa823980610ed08101039082f0801562001dea576040516001600160a01b038216815230907f739fe22b8edefd6ce1fe32460f9cd54bf8e66fc7447f4c8a8131ce078a1988af90602090a2825160025560018060a01b036020840151166001600160601b0360a01b60035416176003556040830151516004556060830151600555608083015160065560a083015160075560018060a01b0360c0840151166001600160601b0360a01b60085416176008556101008301519283516001600160401b038111620009e55762001af6600a54620020bc565b601f811162001d7b575b506020601f821160011462001d02578495829394959262001cf6575b50508160011b916000199060031b1c191617600a555b60018060a01b0382166001600160601b0360a01b600b541617600b5560018060a01b03610120820151166001600160601b0360a01b600c541617600c5560018060a01b03610140820151166001600160601b0360a01b600d541617600d55825b610160820151805182101562001bd957600191906001600160a01b039062001bbc908390620021f5565b5116855284602052604085208260ff198254161790550162001b92565b50507ff5cd483996d35d97699fe885e0a7415610889f44d528c84777658c768c1044709062001ccc60018060a01b036101408301511660018060a01b03610120840151169260018060a01b0360c0820151169060018060a01b0360e08201511660018060a01b036020830151166101608301519462001ca08451966040860151519260608701519460808801519661010060a08a015199015199604080519e8f906101a09682526020820152015260608d015260808c01528060a08c01528a019062001ffe565b9560c089015260e088015261010087015261012086015261014085015283820361016085015262002062565b6001600160a01b03909316610180820152309281900390a261010061ff0019600f541617600f5580f35b01519050388062001b1c565b600a855260008051602062003c4583398151915290855b601f198416811062001d62575060019394959683601f1981161062001d48575b505050811b01600a5562001b32565b015160001960f88460031b161c1916905538808062001d39565b9091602060018192858b01518155019301910162001d19565b600a8552601f820160051c60008051602062003c45833981519152016020831062001dd3575b601f820160051c60008051602062003c4583398151915201811062001dc7575062001b00565b85815560010162001da1565b5060008051602062003c4583398151915262001da1565b50604051903d90823e3d90fd5b60405163c9c95bf560e01b8152600490fd5b60405163042ea06160e41b8152600490fd5b60405162dc149f60e41b8152600490fd5b60208060249362001e3d8662001f47565b81520193019291506200196d565b50346200020857806003193601126200020857602060ff600f5460081c166040519015158152f35b50346200020857806003193601126200020857602061ffff60015416604051908152f35b90503462000d83578160031936011262000d835760209060ff600f541615158152f35b61018081019081106001600160401b0382111762001ed757604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111762001ed757604052565b90601f801991011681019081106001600160401b0382111762001ed757604052565b600435906001600160a01b038216820362001f4257565b600080fd5b35906001600160a01b038216820362001f4257565b919082602091031262001f425760405162001f778162001eed565b91358252565b6001600160401b03811162001ed757601f01601f191660200190565b81601f8201121562001f425780359062001fb38262001f7d565b9262001fc3604051948562001f09565b8284526020838301011162001f4257816000926020809301838601378301015290565b6001600160401b03811162001ed75760051b60200190565b90815180825260208080930193019160005b8281106200201f575050505090565b83516001600160a01b03168552938101939281019260010162002010565b60005b838110620020515750506000910152565b818101518382015260200162002040565b906020916200207d815180928185528580860191016200203d565b601f01601f1916010190565b9181601f8401121562001f42578235916001600160401b03831162001f42576020808501948460051b01011162001f4257565b90600182811c92168015620020ee575b6020831014620020d857565b634e487b7160e01b600052602260045260246000fd5b91607f1691620020cc565b600a54600092916200210b82620020bc565b808252916020906001908181169081156200217e575060011462002130575b50505050565b92939450600a60005260008051602062003c45833981519152926000935b8585106200216a5750505060209250010190388080806200212a565b80548585018401529382019381016200214e565b92505050602093945060ff929192191683830152151560051b010190388080806200212a565b919082604091031262001f4257604080516001600160401b039181018281118282101762001ed7576040528093803590811515820362001f425760209183520135918216820362001f425760200152565b80518210156200220a5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b906200222c8262001fe6565b6200223b604051918262001f09565b82815280926200224e601f199162001fe6565b0190602036910137565b9492909391938552602093602086015260408501526060840152608083015260c060a0830152600091600a54906200229082620020bc565b918260c083015260e06001916001811690816000146200230d5750600114620022bc575b505050505090565b600a60009081529496955091929160008051602062003c458339815191525b838610620022f9575050505060e092935001013880808080620022b4565b8054858701830152948701948201620022db565b93955050505060e0935060ff191683830152151560051b01013880808080620022b4565b91908110156200220a5760051b0190565b356001600160a01b038116810362001f425790565b91908082526020809201929160005b82811062002375575050505090565b909192938280600192838060a01b036200238f8962001f47565b1681520195019392910162002366565b6001805460009261ffff92918316825b620023bf575b5050505050600090565b8385168181101562002402576000908152600e60205260409020546001600160a01b03838116911614620023fa5793820183169382620023af565b505091505090565b50620023b5565b6000604051620024198162001eed565b52604051620024288162001eed565b620f4240815290565b80511515908162002457575b506200244557565b604051632b39f6cb60e01b8152600490fd5b6001600160401b039150602001511615386200243d565b919082039182116200247c57565b634e487b7160e01b600052601160045260246000fd5b91801562002528576001600160a01b03928316928315620024fb57604051926323b872dd60e01b602085015216602483015230604483015260648201526064815260a08101918183106001600160401b0384111762001ed757620024f992604052620025f5565b565b509150508034036200250a5750565b60449060405190635693fffb60e01b82526004820152346024820152fd5b505050565b3d156200255d573d90620025418262001f7d565b9162002551604051938462001f09565b82523d6000602084013e565b606090565b91801562002528576001600160a01b03928316928315620025c3576040519263a9059cbb60e01b602085015216602483015260448201526044815260808101918183106001600160401b0384111762001ed757620024f992604052620025f5565b50600080935080929181925af1620025da6200252d565b5015620025e357565b604051630c08bcb960e21b8152600490fd5b60018060a01b03169060405160408101908082106001600160401b0383111762001ed7576200266b916040526020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af1620026646200252d565b9162002706565b805191821591848315620026df575b505050905015620026885750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b91938180945001031262000d8357820151908115158203620002085750803880846200267a565b919290156200276b57508151156200271c575090565b3b15620027265790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156200277f5750805190602001fd5b60405162461bcd60e51b815260206004820152908190620027a590602483019062002062565b0390fdfe6080806040523461001657610eb4908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600091823560e01c63c4b2da591461002c57600080fd5b346103345760a0366003190112610334576001600160a01b0393823585811691908290036103385760249485359567ffffffffffffffff95868816809803610334576044359187831680930361033057606435938a851680950361028c576084359587156103225750891561031257428a106103125783156103025784156102f25785156102e2578751610a6e8082019c91908b8e11828f10176102cf578c9d82919d9a9b9c9d61041183398b815260209e8f820152878d820152036060019083f080156102c55716998951908c82016323b872dd60e01b815233858401528c60448401528860648401526064835260a0830192808410838511176102a55760e0810184811084821117610293578d528e84527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152518491829190828b5af1903d156102b7573d8181116102a5578c5191601f8201601f19908116603f011683019081118382101761029357918f92916101b89594928f5281528581933d92013e5b8861033c565b8051918215918d8315610268575b5050509050156102135750508551938452878401528285015260608201528391907f515cf92d69f6cb24204f2d033637fc556ff95bd7c99a08bbd4d56500cab426db90608090a351908152f35b875162461bcd60e51b81529182018a9052602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b91938180945001031261028f578b015190811515820361028c57508038808d6101c6565b80fd5b5080fd5b634e487b7160e01b8652604188528686fd5b634e487b7160e01b8552604187528585fd5b50906101b8916060906101b2565b8a513d84823e3d90fd5b5050634e487b7160e01b82525060418352fd5b875163162908e360e11b81528390fd5b875163c1ab6dc160e01b81528390fd5b8751637616640160e01b81528390fd5b8751632ca4094f60e21b81528390fd5b631559b7d760e21b81528390fd5b8380fd5b8280fd5b8480fd5b9192901561039e5750815115610350575090565b3b156103595790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156103b15750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106103f7575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506103d456fe60e0601f610a6e38819003918201601f19168301916001600160401b03831184841017610118578084926060946040528339810103126101135780516001600160a01b038116919082810361011357610066604061005f6020850161012e565b930161012e565b92156100bb5760805260a05260c05260405161092b9081610143823960805181818161021c0152818161035c0152610411015260a0518181816101090152610738015260c051818181610579015261076d0152f35b60405162461bcd60e51b815260206004820152602a60248201527f56657374696e6757616c6c65743a2062656e6566696369617279206973207a65604482015269726f206164647265737360b01b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160401b03821682036101135756fe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c9081630a17b06b1461059d5781630fb5a6b414610558578163191655871461038b57816338af3eed14610347578163810ec23b1461030857816386d1a69f146101a55750806396132521146101895780639852595c14610152578063a3f8eace1461012d578063be9a6555146100e95763fbccedae0361001157346100e557816003193601126100e5576100de6020926100d9479154916100d48367ffffffffffffffff4216926105f0565b610729565b6106e4565b9051908152f35b5080fd5b50346100e557816003193601126100e5576020905167ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346100e55760203660031901126100e5576020906100de61014d6105d5565b6106f1565b50346100e55760203660031901126100e55760209181906001600160a01b036101796105d5565b1681526001845220549051908152f35b50346100e557816003193601126100e557602091549051908152f35b9190503461030457826003193601126103045782546101e06101d9826100d94267ffffffffffffffff166100d483476105f0565b80926105f0565b84557fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b60208351838152a18047106102c15783908190819081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af161024e6107e1565b5015610258578280f35b906020608492519162461bcd60e51b8352820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152fd5b815162461bcd60e51b8152602081850152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b8280fd5b5050346100e557806003193601126100e5576103226105d5565b6024359267ffffffffffffffff8416840361034457506020926100de9161064b565b80fd5b5050346100e557816003193601126100e557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b919050346103045760209081600319360112610554576103a96105d5565b6103b2816106f1565b9060018060a01b0380911690818752600185528387206103d38482546105f0565b9055817fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b868651868152a28351928584019163a9059cbb60e01b83527f0000000000000000000000000000000000000000000000000000000000000000166024850152604484015260448352608083019267ffffffffffffffff818510818611176105415760c08201908111858210176105415785528584527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460a0820152516104af9392918891829182855af16104a96107e1565b91610821565b805183811591821561051d575b50509050156104c9578380f35b5162461bcd60e51b815291820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260849150fd5b838092935001031261053d57820151801515810361053d578083386104bc565b8480fd5b634e487b7160e01b895260418852602489fd5b8380fd5b5050346100e557816003193601126100e5576020905167ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b905034610304576020366003190112610304573567ffffffffffffffff81168103610304576100de906100d4602094479054906105f0565b600435906001600160a01b03821682036105eb57565b600080fd5b919082018092116105fd57565b634e487b7160e01b600052601160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761063557604052565b634e487b7160e01b600052604160045260246000fd5b6040516370a0823160e01b81523060048201526001600160a01b03919091169190602081602481865afa9081156106d8576000916106a4575b506100d4906106a1936000526001602052604060002054906105f0565b90565b90506020813d6020116106d0575b816106bf60209383610613565b810103126105eb57516106a1610684565b3d91506106b2565b6040513d6000823e3d90fd5b919082039182116105fd57565b6106a19061070967ffffffffffffffff42168261064b565b6001600160a01b03909116600090815260016020526040902054906106e4565b67ffffffffffffffff918216917f00000000000000000000000000000000000000000000000000000000000000008116908184101561076b5750505050600090565b7f0000000000000000000000000000000000000000000000000000000000000000169261079884836105f0565b8111156107a6575050905090565b906107b0916106e4565b908181029181830414901517156105fd5781156107cb570490565b634e487b7160e01b600052601260045260246000fd5b3d1561081c573d9067ffffffffffffffff82116106355760405191610810601f8201601f191660200184610613565b82523d6000602084013e565b606090565b919290156108835750815115610835575090565b3b1561083e5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156108965750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106108dc575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506108b956fea2646970667358221220f6235be43f7faaf5ef42395a12abc7ae732a090157a3385a315158d316c1bd6064736f6c63430008180033a2646970667358221220b5fa9168d47ec92b437bc6882b20dd0185841b3e3ae16ed623710a66d315987264736f6c6343000818003360a03461009557601f6105cb38819003918201601f19168301916001600160401b0383118484101761009a5780849260209460405283398101031261009557516001600160a01b03811680820361009557156100835760805260405161051a90816100b18239608051818181607e0152818160e1015281816101b701526102660152f35b604051635a3f066960e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b60009160e08335811c90816316c1973914610333578163a3de7d1714610233578163c1ac10261461011457508063e82bb126146100cc5763fb33ce811461005b57600080fd5b346100c857816003193601126100c857610073610456565b6001600160a01b03917f0000000000000000000000000000000000000000000000000000000000000000831633036100ba5750168252816020526007602435918320015580f35b8351631a27eac360e11b8152fd5b8280fd5b505034610110578160031936011261011057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b848385346100c8576101203660031901126100c857610131610456565b9361010036602319011261022f57610147610471565b92602435845260208401906044358252610160366104c8565b848601908152606086016084358152602060a31936011261022b576101836104a8565b9160a43583526080880192835260a088019460c435865260c089019660e435885289019761010435895260018060a01b03807f000000000000000000000000000000000000000000000000000000000000000016330361021b5760079a9b9c168c528b6020528b2099518a555160018a0155515160028901555160038801555151908601555160058501555160068401555191015580f35b8151631a27eac360e11b81528790fd5b8780fd5b8380fd5b84848492346100c85760803660031901126100c857610250610456565b9061025a366104c8565b926001600160a01b03907f000000000000000000000000000000000000000000000000000000000000000082163303610324579585966007959661029c6104a8565b526102a56104a8565b908882526102b1610471565b976024358952602089016044358152828a0191825260608a019242845260808b0194855260a08b01968c885260c08c01988d8a528c01998d8b52168c528b6020528b2099518a555160018a0155515160028901555160038801555151908601555160058501555160068401555191015580f35b51631a27eac360e11b81528690fd5b9190503461022f57602036600319011261022f578261010094610354610456565b818561035e610471565b82815282602082015261036f6104a8565b838152868201528260608201526103846104a8565b838152608082015260a0810183905260c0810183905201526001600160a01b031681526020819052206103b5610471565b9381548552600182015492602086019384526103cf6104a8565b9160028401548352808701928352600384015490606088019182526103f26104a8565b9285015483526080880192835260058501549360a08901948552600760068701549660c08b01978852015496888a01978852825199518a525160208a0152515190880152516060870152515160808601525160a08501525160c08401525190820152f35b600435906001600160a01b038216820361046c57565b600080fd5b60405190610100820182811067ffffffffffffffff82111761049257604052565b634e487b7160e01b600052604160045260246000fd5b604051906020820182811067ffffffffffffffff82111761049257604052565b602090606319011261046c576104dc6104a8565b90606435825256fea2646970667358221220f9197761eae1a8839a6606c94eed8300af1b83793252e9badea713839d2d9ea864736f6c63430008180033c65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80411b059ef29e41429d7aa233c3c43e82806856b23c24bfb1f9e4c6efa5689a1a2646970667358221220a2c860855b2342d6ab93c027cbb1608bfa9fa692077e2a98a65edf9c615a040364736f6c63430008180033",
  "devdoc": {
    "details": "Factory contract for creating and managing token streams",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor to set the protocol admin",
        "params": {
          "protocolAdmin": "Address of the protocol admin"
        }
      },
      "createStream((address,address,address,uint256,uint256,uint256,uint256,uint256,(string),(bool,uint64),(bool,uint64),(uint256),string))": {
        "details": "Creates a new stream with the provided configuration",
        "params": {
          "createStreamMessage": "Stream creation parameters"
        }
      },
      "getAcceptedInSupplyTokens()": {
        "details": "Get all accepted input supply tokens",
        "returns": {
          "_0": "Array of accepted token addresses"
        }
      },
      "getParams()": {
        "details": "Get factory parameters",
        "returns": {
          "_0": "Factory parameters"
        }
      },
      "getStream(uint16)": {
        "details": "Get stream address by ID",
        "params": {
          "streamId": "Stream ID"
        },
        "returns": {
          "_0": "Stream address"
        }
      },
      "getStreams()": {
        "details": "Get all stream addresses",
        "returns": {
          "_0": "Array of stream addresses"
        }
      },
      "initialize((uint256,address,(uint256),uint256,uint256,uint256,address,address,string,address,address,address[]))": {
        "details": "Initializes the factory with the provided configuration",
        "params": {
          "initializeStreamMessage": "Factory initialization parameters"
        }
      },
      "isAcceptedInSupplyToken(address)": {
        "details": "Check if a token is accepted as input supply token",
        "params": {
          "token": "Token address to check"
        },
        "returns": {
          "_0": "True if the token is accepted"
        }
      },
      "isStream(address)": {
        "details": "Check if an address is a stream created by this factory",
        "params": {
          "streamAddress": "Address to check"
        },
        "returns": {
          "_0": "True if the address is a stream"
        }
      },
      "setFrozen(bool)": {
        "details": "Sets the frozen state of the factory",
        "params": {
          "isFrozen": "Whether the factory should be frozen"
        }
      },
      "updateAcceptedTokens(address[],address[])": {
        "details": "Updates the list of accepted input supply tokens",
        "params": {
          "tokensToAdd": "Array of token addresses to add",
          "tokensToRemove": "Array of token addresses to remove"
        }
      },
      "updateExitFeeRatio((uint256))": {
        "details": "Updates the exit fee ratio",
        "params": {
          "exitFeeRatio": "New exit fee ratio"
        }
      },
      "updateFeeCollector(address)": {
        "details": "Updates the fee collector address",
        "params": {
          "feeCollector": "New fee collector address"
        }
      },
      "updateMinBootstrappingDuration(uint256)": {
        "details": "Updates the minimum bootstrapping duration",
        "params": {
          "minBootstrappingDuration": "New minimum bootstrapping duration"
        }
      },
      "updateMinStreamDuration(uint256)": {
        "details": "Updates the minimum stream duration",
        "params": {
          "minStreamDuration": "New minimum stream duration"
        }
      },
      "updateMinWaitingDuration(uint256)": {
        "details": "Updates the minimum waiting duration",
        "params": {
          "minWaitingDuration": "New minimum waiting duration"
        }
      },
      "updatePoolWrapper(address)": {
        "details": "Updates the pool wrapper address",
        "params": {
          "poolWrapper": "New pool wrapper address"
        }
      },
      "updateProtocolAdmin(address)": {
        "details": "Updates the protocol admin address",
        "params": {
          "protocolAdmin": "New protocol admin address"
        }
      },
      "updateStreamCreationFee(uint256)": {
        "details": "Updates the stream creation fee",
        "params": {
          "streamCreationFee": "New creation fee amount"
        }
      },
      "updateStreamCreationFeeToken(address)": {
        "details": "Updates the stream creation fee token",
        "params": {
          "streamCreationFeeToken": "New fee token address"
        }
      },
      "updateStreamImplementation(address)": {
        "details": "Updates the stream implementation address",
        "params": {
          "implementation": "New stream implementation address"
        }
      },
      "updateTosVersion(string)": {
        "details": "Updates the TOS version",
        "params": {
          "tosVersion": "New TOS version"
        }
      }
    },
    "title": "StreamFactory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptedInSupplyTokens(address)": {
        "notice": "Mapping of accepted input supply tokens"
      },
      "createStream((address,address,address,uint256,uint256,uint256,uint256,uint256,(string),(bool,uint64),(bool,uint64),(uint256),string))": {
        "notice": "Anyone can create a stream if they provide the required tokens and fees"
      },
      "currentStreamId()": {
        "notice": "Current stream ID counter"
      },
      "frozen()": {
        "notice": "Flag to freeze stream creation"
      },
      "initialize((uint256,address,(uint256),uint256,uint256,uint256,address,address,string,address,address,address[]))": {
        "notice": "This function can only be called once by the admin"
      },
      "initialized()": {
        "notice": "Flag to ensure initialization happens only once"
      },
      "params()": {
        "notice": "Factory parameters"
      },
      "streamAddresses(uint16)": {
        "notice": "Mapping of stream ID to stream address"
      }
    },
    "notice": "Handles stream creation, parameter management, and accepted token management",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3522,
        "contract": "src/StreamFactory.sol:StreamFactory",
        "label": "acceptedInSupplyTokens",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 3525,
        "contract": "src/StreamFactory.sol:StreamFactory",
        "label": "currentStreamId",
        "offset": 0,
        "slot": "1",
        "type": "t_uint16"
      },
      {
        "astId": 3529,
        "contract": "src/StreamFactory.sol:StreamFactory",
        "label": "params",
        "offset": 0,
        "slot": "2",
        "type": "t_struct(Params)6674_storage"
      },
      {
        "astId": 3534,
        "contract": "src/StreamFactory.sol:StreamFactory",
        "label": "streamAddresses",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_uint16,t_address)"
      },
      {
        "astId": 3537,
        "contract": "src/StreamFactory.sol:StreamFactory",
        "label": "frozen",
        "offset": 0,
        "slot": "15",
        "type": "t_bool"
      },
      {
        "astId": 3540,
        "contract": "src/StreamFactory.sol:StreamFactory",
        "label": "initialized",
        "offset": 1,
        "slot": "15",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint16,t_address)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Decimal)5665_storage": {
        "encoding": "inplace",
        "label": "struct Decimal",
        "members": [
          {
            "astId": 5664,
            "contract": "src/StreamFactory.sol:StreamFactory",
            "label": "value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Params)6674_storage": {
        "encoding": "inplace",
        "label": "struct StreamFactoryTypes.Params",
        "members": [
          {
            "astId": 6650,
            "contract": "src/StreamFactory.sol:StreamFactory",
            "label": "streamCreationFee",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6652,
            "contract": "src/StreamFactory.sol:StreamFactory",
            "label": "streamCreationFeeToken",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 6655,
            "contract": "src/StreamFactory.sol:StreamFactory",
            "label": "exitFeeRatio",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Decimal)5665_storage"
          },
          {
            "astId": 6657,
            "contract": "src/StreamFactory.sol:StreamFactory",
            "label": "minWaitingDuration",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 6659,
            "contract": "src/StreamFactory.sol:StreamFactory",
            "label": "minBootstrappingDuration",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 6661,
            "contract": "src/StreamFactory.sol:StreamFactory",
            "label": "minStreamDuration",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 6663,
            "contract": "src/StreamFactory.sol:StreamFactory",
            "label": "feeCollector",
            "offset": 0,
            "slot": "6",
            "type": "t_address"
          },
          {
            "astId": 6665,
            "contract": "src/StreamFactory.sol:StreamFactory",
            "label": "protocolAdmin",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          },
          {
            "astId": 6667,
            "contract": "src/StreamFactory.sol:StreamFactory",
            "label": "tosVersion",
            "offset": 0,
            "slot": "8",
            "type": "t_string_storage"
          },
          {
            "astId": 6669,
            "contract": "src/StreamFactory.sol:StreamFactory",
            "label": "vestingFactoryAddress",
            "offset": 0,
            "slot": "9",
            "type": "t_address"
          },
          {
            "astId": 6671,
            "contract": "src/StreamFactory.sol:StreamFactory",
            "label": "poolWrapperAddress",
            "offset": 0,
            "slot": "10",
            "type": "t_address"
          },
          {
            "astId": 6673,
            "contract": "src/StreamFactory.sol:StreamFactory",
            "label": "streamImplementationAddress",
            "offset": 0,
            "slot": "11",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}